<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Kd148EOzEeyj8q1of7NKLw" name="PACMAN_project">
    <eAnnotations xmi:id="_LbudgEOzEeyj8q1of7NKLw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_LbudgUOzEeyj8q1of7NKLw" source="codegen">
        <details xmi:id="_LbvEkEOzEeyj8q1of7NKLw" key="codegenDirectory" value="/PACMAN_project/src"/>
        <details xmi:id="_OZYhcEOzEeyj8q1of7NKLw" key="AssociatedSourceCode" value="/PACMAN_project/src/Controller/GameBoardController.java;206036829/1;/PACMAN_project/src/Controller/LastGamesController.java;2578974691/1;/PACMAN_project/src/Controller/Main.java;1953172386/1;/PACMAN_project/src/Controller/MainController.java;732807354/1;/PACMAN_project/src/Controller/PacManController.java;349991587/1;/PACMAN_project/src/Controller/Player.java;3909945945/1;/PACMAN_project/src/Controller/QuestionController.java;3611786144/1;/PACMAN_project/src/Controller/StartGameController.java;2297499722/1;/PACMAN_project/src/Model/Answer.java;2010332358/1;/PACMAN_project/src/Model/Bomb.java;241441026/1;/PACMAN_project/src/Model/CheckPoint.java;1721940887/1;/PACMAN_project/src/Model/Clyde.java;3534155283/1;/PACMAN_project/src/Model/Collectable.java;1031957419/1;/PACMAN_project/src/Model/GameSpeeds.java;2600908506/1;/PACMAN_project/src/View/PacManView.java;1387874389/1;/PACMAN_project/src/Model/GhostState.java;3781910172/1;/PACMAN_project/src/Model/Walls.java;978668184/1;/PACMAN_project/src/Model/SysData.java;797399882/1;/PACMAN_project/src/Model/Player.java;2752549991/1;/PACMAN_project/src/Model/PlayerState.java;4213467136/1;/PACMAN_project/src/Model/Question.java;3194944794/1;/PACMAN_project/src/Model/Pinky.java;1107254017/1;/PACMAN_project/src/Model/Inky.java;2181848688/1;/PACMAN_project/src/View/MazePanel.java;1996124801/1;/PACMAN_project/src/Model/Ghost.java;1145753751/1;/PACMAN_project/src/Model/GameEntity.java;2354062278/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_MdxwYEOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_Md3P8EOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_Md33AEOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_Md4eEEOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_Md4eEUOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_Md4eEkOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_Md4eE0OzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_Md5FIEOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_Md6TQEOzEeyj8q1of7NKLw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_MeBA8EOzEeyj8q1of7NKLw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_MeBA8UOzEeyj8q1of7NKLw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_MtSMAEOzEeyj8q1of7NKLw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MuaNYUOzEeyj8q1of7NKLw" name="File"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Mf7FcEOzEeyj8q1of7NKLw" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_MuVU4EOzEeyj8q1of7NKLw" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MuWjAUOzEeyj8q1of7NKLw" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MuXxIUOzEeyj8q1of7NKLw" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MuY_QUOzEeyj8q1of7NKLw" name="Image"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_MeCPEEOzEeyj8q1of7NKLw" name="javafx">
      <packagedElement xmi:type="uml:Package" xmi:id="_MeCPEUOzEeyj8q1of7NKLw" name="event">
        <packagedElement xmi:type="uml:Class" xmi:id="_MtXEgEOzEeyj8q1of7NKLw" name="ActionEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_MeC2IEOzEeyj8q1of7NKLw" name="fxml">
        <packagedElement xmi:type="uml:Interface" xmi:id="_MtZgwEOzEeyj8q1of7NKLw" name="FXML"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MtbV8EOzEeyj8q1of7NKLw" name="FXMLLoader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_MeDdMEOzEeyj8q1of7NKLw" name="scene">
        <packagedElement xmi:type="uml:Package" xmi:id="_MeEEQEOzEeyj8q1of7NKLw" name="control">
          <packagedElement xmi:type="uml:Class" xmi:id="_Mtg1gUOzEeyj8q1of7NKLw" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Mt5QAEOzEeyj8q1of7NKLw" name="Alert"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Mt8TUEOzEeyj8q1of7NKLw" name="TextField"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_MeErUEOzEeyj8q1of7NKLw" name="layout">
          <packagedElement xmi:type="uml:Class" xmi:id="_MtiqsUOzEeyj8q1of7NKLw" name="AnchorPane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MtdyMEOzEeyj8q1of7NKLw" name="Node"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MtfAUUOzEeyj8q1of7NKLw" name="Scene"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_MeFSYEOzEeyj8q1of7NKLw" name="stage">
        <packagedElement xmi:type="uml:Class" xmi:id="_MtlG8EOzEeyj8q1of7NKLw" name="Stage"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_MegwMEOzEeyj8q1of7NKLw" name="application">
        <packagedElement xmi:type="uml:Class" xmi:id="_MttCwEOzEeyj8q1of7NKLw" name="Application"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_MeQRgEOzEeyj8q1of7NKLw" name="Controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_MhSXYEOzEeyj8q1of7NKLw" name="GameBoardController">
        <ownedAttribute xmi:id="_MvZE0EOzEeyj8q1of7NKLw" name="backBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyA7AEOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mw7V4EOzEeyj8q1of7NKLw" name="backToMain" specification="_Mu1EIEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mw7V4UOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/view/Main.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Main Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mu1EIEOzEeyj8q1of7NKLw" name="backToMain" visibility="private" method="_Mw7V4EOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mu1EIUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MhcvcEOzEeyj8q1of7NKLw" name="LastGamesController">
        <ownedAttribute xmi:id="_Mva6AEOzEeyj8q1of7NKLw" name="backBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyBiEUOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxCDkEOzEeyj8q1of7NKLw" name="backToMain" specification="_Mu5VkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxCDkUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/view/Main.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node)event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Main Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mu5VkEOzEeyj8q1of7NKLw" name="backToMain" visibility="private" method="_MxCDkEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mu58oEOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MhmgcEOzEeyj8q1of7NKLw" name="Main">
        <generalization xmi:id="_Mu-OEEOzEeyj8q1of7NKLw" general="_MttCwEOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxCDkkOzEeyj8q1of7NKLw" name="start" specification="_Mu7x0EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxCDk0OzEeyj8q1of7NKLw" name="primaryStage" type="_MtlG8EOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>try {
			AnchorPane root = FXMLLoader.load(Main.class.getResource(&quot;/View/Main.fxml&quot;));
			Scene scene = new Scene(root);
			//scene.getStylesheets().add(getClass().getResource(&quot;application.css&quot;).toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.setTitle(&quot;MainScreen&quot;);
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxCqoEOzEeyj8q1of7NKLw" name="main" specification="_MhoVoEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxCqoUOzEeyj8q1of7NKLw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxCqokOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>launch(args);
		
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MhoVoEOzEeyj8q1of7NKLw" name="main" isStatic="true" method="_MxCqoEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MhoVoUOzEeyj8q1of7NKLw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhqK0EOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mu7x0EOzEeyj8q1of7NKLw" name="start" method="_MxCDkkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mu8Y4EOzEeyj8q1of7NKLw" name="primaryStage" type="_MtlG8EOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MhsnEEOzEeyj8q1of7NKLw" name="MainController">
        <ownedAttribute xmi:id="_MvcvMEOzEeyj8q1of7NKLw" name="startGameBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyCwMEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MxkPEEOzEeyj8q1of7NKLw" name="lastGamesBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyXgUUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MxldMEOzEeyj8q1of7NKLw" name="questionsBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyYucUOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxDRsEOzEeyj8q1of7NKLw" name="LastGames" specification="_Mu_cMEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxDRsUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(Main.class.getResource(&quot;/View/LastGames.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Last Games Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxD4wEOzEeyj8q1of7NKLw" name="startGame" specification="_MvBRYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxD4wUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/View/startGame.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Start Game Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxD4wkOzEeyj8q1of7NKLw" name="questions" specification="_MvCfgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxD4w0OzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/View/questions.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Questions Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mu_cMEOzEeyj8q1of7NKLw" name="LastGames" visibility="private" method="_MxDRsEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mu_cMUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MvBRYEOzEeyj8q1of7NKLw" name="startGame" visibility="private" method="_MxD4wEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvBRYUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MvCfgEOzEeyj8q1of7NKLw" name="questions" visibility="private" method="_MxD4wkOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvCfgUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mh1xAEOzEeyj8q1of7NKLw" name="PacManController">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxFG4EOzEeyj8q1of7NKLw" name="PacManController" specification="_Mt0XgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxFG4UOzEeyj8q1of7NKLw" name="player1" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxFG4kOzEeyj8q1of7NKLw" name="pinky" type="_MjevwEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxFG40OzEeyj8q1of7NKLw" name="inky" type="_MjunYEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxFG5EOzEeyj8q1of7NKLw" name="clyde" type="_MiTEAEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxFG5UOzEeyj8q1of7NKLw" name="cellDim">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxFG5kOzEeyj8q1of7NKLw" type="_Mh1xAEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxFG50OzEeyj8q1of7NKLw" name="getTimerSpeed" specification="_Mh40UEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxFG6EOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxFt8EOzEeyj8q1of7NKLw" name="setDyingAnimationState" specification="_Mh5bYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxFt8UOzEeyj8q1of7NKLw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxFt8kOzEeyj8q1of7NKLw" name="resetAnimationTimer" specification="_Mh6CcEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxGVAEOzEeyj8q1of7NKLw" name="resetGhosts" specification="_Mh6pgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxGVAUOzEeyj8q1of7NKLw" name="cellDim">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxGVAkOzEeyj8q1of7NKLw" name="cellOffset">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxGVA0OzEeyj8q1of7NKLw" name="setMazeInstance" specification="_Mt2MsEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxGVBEOzEeyj8q1of7NKLw" name="mazePanel" type="_Mj18IEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mh40UEOzEeyj8q1of7NKLw" name="getTimerSpeed" isStatic="true" method="_MxFG50OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mh40UUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mh5bYEOzEeyj8q1of7NKLw" name="setDyingAnimationState" isStatic="true" method="_MxFt8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mh5bYUOzEeyj8q1of7NKLw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mh6CcEOzEeyj8q1of7NKLw" name="resetAnimationTimer" isStatic="true" method="_MxFt8kOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_Mh6pgEOzEeyj8q1of7NKLw" name="resetGhosts" isStatic="true" method="_MxGVAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mh6pgUOzEeyj8q1of7NKLw" name="cellDim">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mh6pgkOzEeyj8q1of7NKLw" name="cellOffset">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mt0XgEOzEeyj8q1of7NKLw" name="PacManController" method="_MxFG4EOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Mt0-lEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Mt0-lUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Mt0XgUOzEeyj8q1of7NKLw" name="player1" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_Mt0-kEOzEeyj8q1of7NKLw" name="pinky" type="_MjevwEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_Mt0-kUOzEeyj8q1of7NKLw" name="inky" type="_MjunYEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_Mt0-kkOzEeyj8q1of7NKLw" name="clyde" type="_MiTEAEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_Mt0-k0OzEeyj8q1of7NKLw" name="cellDim">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mt1loEOzEeyj8q1of7NKLw" type="_Mh1xAEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Mt2MsEOzEeyj8q1of7NKLw" name="setMazeInstance" method="_MxGVA0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mt2MsUOzEeyj8q1of7NKLw" name="mazePanel" type="_Mj18IEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mh-68EOzEeyj8q1of7NKLw" name="Player"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mh_iAEOzEeyj8q1of7NKLw" name="QuestionController">
        <ownedAttribute xmi:id="_MvhnsEOzEeyj8q1of7NKLw" name="backBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyDXQUOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxG8EEOzEeyj8q1of7NKLw" name="backToMain" specification="_MvEUsEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxG8EUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/view/Main.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Main Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MvEUsEOzEeyj8q1of7NKLw" name="backToMain" visibility="private" method="_MxG8EEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvEUsUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MiClUEOzEeyj8q1of7NKLw" name="StartGameController">
        <ownedAttribute xmi:id="_MvlSEEOzEeyj8q1of7NKLw" name="backBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyElYUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MvnHQEOzEeyj8q1of7NKLw" name="playerName" visibility="package" type="_Mt8TUEOzEeyj8q1of7NKLw" association="_MyFzgEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MxmrUEOzEeyj8q1of7NKLw" name="enterBtn" visibility="package" type="_Mtg1gUOzEeyj8q1of7NKLw" association="_MyZVgUOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxHjIEOzEeyj8q1of7NKLw" name="backToMain" specification="_MvGw8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxHjIUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/view/Main.fxml&quot;));
		Scene scene = new Scene(pane);
		Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		stage.setScene(scene);
		stage.setTitle(&quot;Main Screen&quot;);
		stage.show();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxHjIkOzEeyj8q1of7NKLw" name="nameEntered" specification="_MvH_EEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxHjI0OzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>String name = playerName.getText();
		if(!name.isEmpty()) {
			Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
			alert.setContentText(&quot;player name entered: &quot;+name);
			alert.show();
			AnchorPane pane = FXMLLoader.load(getClass().getResource(&quot;/view/GameBoard.fxml&quot;));
			Scene scene = new Scene(pane);
			Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
			stage.setScene(scene);
			stage.setTitle(&quot;Game Screen&quot;);
			stage.show();
			
		} else {
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setContentText(&quot;Must enter a player name&quot;);
			alert.show();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MvGw8EOzEeyj8q1of7NKLw" name="backToMain" visibility="private" method="_MxHjIEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvGw8UOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MvH_EEOzEeyj8q1of7NKLw" name="nameEntered" visibility="private" method="_MxHjIkOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvH_EUOzEeyj8q1of7NKLw" name="event" type="_MtXEgEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyA7AEOzEeyj8q1of7NKLw" name="" memberEnd="_MyA7AUOzEeyj8q1of7NKLw _MvZE0EOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyA7AUOzEeyj8q1of7NKLw" name="" type="_MhSXYEOzEeyj8q1of7NKLw" association="_MyA7AEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyBiEUOzEeyj8q1of7NKLw" name="" memberEnd="_MyBiEkOzEeyj8q1of7NKLw _Mva6AEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyBiEkOzEeyj8q1of7NKLw" name="" type="_MhcvcEOzEeyj8q1of7NKLw" association="_MyBiEUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyCwMEOzEeyj8q1of7NKLw" name="" memberEnd="_MyCwMUOzEeyj8q1of7NKLw _MvcvMEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyCwMUOzEeyj8q1of7NKLw" name="" type="_MhsnEEOzEeyj8q1of7NKLw" association="_MyCwMEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyDXQUOzEeyj8q1of7NKLw" name="" memberEnd="_MyDXQkOzEeyj8q1of7NKLw _MvhnsEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyDXQkOzEeyj8q1of7NKLw" name="" type="_Mh_iAEOzEeyj8q1of7NKLw" association="_MyDXQUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyElYUOzEeyj8q1of7NKLw" name="" memberEnd="_MyElYkOzEeyj8q1of7NKLw _MvlSEEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyElYkOzEeyj8q1of7NKLw" name="" type="_MiClUEOzEeyj8q1of7NKLw" association="_MyElYUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyFzgEOzEeyj8q1of7NKLw" name="" memberEnd="_MyFzgUOzEeyj8q1of7NKLw _MvnHQEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyFzgUOzEeyj8q1of7NKLw" name="" type="_MiClUEOzEeyj8q1of7NKLw" association="_MyFzgEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyXgUUOzEeyj8q1of7NKLw" name="" memberEnd="_MyXgUkOzEeyj8q1of7NKLw _MxkPEEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyXgUkOzEeyj8q1of7NKLw" name="" type="_MhsnEEOzEeyj8q1of7NKLw" association="_MyXgUUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyYucUOzEeyj8q1of7NKLw" name="" memberEnd="_MyYuckOzEeyj8q1of7NKLw _MxldMEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyYuckOzEeyj8q1of7NKLw" name="" type="_MhsnEEOzEeyj8q1of7NKLw" association="_MyYucUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyZVgUOzEeyj8q1of7NKLw" name="" memberEnd="_MyZVgkOzEeyj8q1of7NKLw _MxmrUEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyZVgkOzEeyj8q1of7NKLw" name="" type="_MiClUEOzEeyj8q1of7NKLw" association="_MyZVgUOzEeyj8q1of7NKLw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_MezrIEOzEeyj8q1of7NKLw" name="Model">
      <packagedElement xmi:type="uml:Class" xmi:id="_MiJ6EEOzEeyj8q1of7NKLw" name="Answer"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_MiLIMEOzEeyj8q1of7NKLw" name="Bomb">
        <generalization xmi:id="_MuBL0EOzEeyj8q1of7NKLw" general="_MidcEEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MiMWUEOzEeyj8q1of7NKLw" name="CheckPoint">
        <ownedAttribute xmi:id="_MvpjgEOzEeyj8q1of7NKLw" name="coords" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MvqKkEOzEeyj8q1of7NKLw" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MvqxoEOzEeyj8q1of7NKLw" value="new int[4]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxIKMEOzEeyj8q1of7NKLw" name="CheckPoint" specification="_MiOLgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxIKMUOzEeyj8q1of7NKLw" type="_MiMWUEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.coords[0] = 0;&#xD;
		this.coords[1] = 0;&#xD;
		this.coords[2] = 0;&#xD;
		this.coords[3] = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxIxQEOzEeyj8q1of7NKLw" name="CheckPoint" specification="_MiPZoEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxIxQUOzEeyj8q1of7NKLw" name="xi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxIxQkOzEeyj8q1of7NKLw" name="xs">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxIxQ0OzEeyj8q1of7NKLw" name="yi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxIxREOzEeyj8q1of7NKLw" name="ys">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxIxRUOzEeyj8q1of7NKLw" type="_MiMWUEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.coords[0] = xi;&#xD;
		this.coords[1] = xs;&#xD;
		this.coords[2] = yi;&#xD;
		this.coords[3] = ys;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxJYUEOzEeyj8q1of7NKLw" name="getCheckPointCoordinates" specification="_MiRO0EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxJYUUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxJYUkOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.coords;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MiOLgEOzEeyj8q1of7NKLw" name="CheckPoint" method="_MxIKMEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MiOLgUOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MiOLgkOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MiOykEOzEeyj8q1of7NKLw" type="_MiMWUEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MiPZoEOzEeyj8q1of7NKLw" name="CheckPoint" method="_MxIxQEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MiQnwEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MiQnwUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MiPZoUOzEeyj8q1of7NKLw" name="xi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MiPZokOzEeyj8q1of7NKLw" name="xs">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MiQAsEOzEeyj8q1of7NKLw" name="yi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MiQAsUOzEeyj8q1of7NKLw" name="ys">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MiQnwkOzEeyj8q1of7NKLw" type="_MiMWUEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MiRO0EOzEeyj8q1of7NKLw" name="getCheckPointCoordinates" method="_MxJYUEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MiRO0UOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MiR14EOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MiTEAEOzEeyj8q1of7NKLw" name="Clyde">
        <generalization xmi:id="_MuEPIEOzEeyj8q1of7NKLw" general="_Mj4YYEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MvrYsEOzEeyj8q1of7NKLw" name="timer" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MvrYsUOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mvr_wUOzEeyj8q1of7NKLw" name="goCounter" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mvsm0EOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MvtN4UOzEeyj8q1of7NKLw" name="go" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mvt08EOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MvucAUOzEeyj8q1of7NKLw" name="dir" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MvucAkOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MvvqIEOzEeyj8q1of7NKLw" name="inSpawn" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MvvqIUOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxJ_YEOzEeyj8q1of7NKLw" name="Clyde" specification="_MuCZ8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxJ_YUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxJ_YkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxJ_Y0OzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxJ_ZEOzEeyj8q1of7NKLw" type="_MiTEAEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>super(&quot;Sprites/upClyde.png&quot;, &quot;Sprites/downClyde.png&quot;, &quot;Sprites/leftClyde.png&quot;,&#xD;
								&quot;Sprites/rightClyde.png&quot;, &quot;Sprites/pausedClyde.png&quot;, x, y, player);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxKmcEOzEeyj8q1of7NKLw" name="action" specification="_MiWHUEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxKmcUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxKmckOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>GhostState state = this.getGameState();&#xD;
		//System.out.println(&quot; &quot; + this.getGameState());&#xD;
		&#xD;
		switch (state) {&#xD;
		&#xD;
		//updates the target to bottom right corner&#xD;
		//updates current speed to SCATTER speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case SCATTER :&#xD;
			setNextDirection(31 * cellDim, 34 * cellDim);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(3, false);&#xD;
			inSpawn = false;&#xD;
			//System.out.println(timer + &quot;&quot;);&#xD;
			if(timer >= 3500 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.CHASE);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				System.out.println(&quot;Clyde set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//updates the target to the player's coordinates&#xD;
		//updates current speed to CHASE speed&#xD;
		//switches to SCATTER after the time passes&#xD;
		case CHASE :&#xD;
			setNextDirection(x, y);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(3, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 10000 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.SCATTER);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				System.out.println(&quot;Clyde set to scatter!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//chooses a random direction to travel&#xD;
		//updates current speed to FRIGHTENED speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case FRIGHTENED :&#xD;
			setFrightenedDirection();&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED50.value);&#xD;
			GameEntity.setGhostEaten(3, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 3000 / PacManController.getTimerSpeed()) {&#xD;
				setGameState(GhostState.CHASE);&#xD;
				Player.updateGameState(PlayerState.NORMAL);&#xD;
				blinking = false;&#xD;
				System.out.println(&quot;Clyde set to chase!&quot;);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(timer >= 2200 / PacManController.getTimerSpeed()) {&#xD;
					&#xD;
					blinking = true;&#xD;
				}&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//sets the target as the respawn point&#xD;
		//updates current speed to SUPERSPEED&#xD;
		//switches to RESPAWN after the ghost's eyes reach the spawn point&#xD;
		case EATEN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 14 * cellDim + cellDim / 2);&#xD;
			this.setMovementSpeed(GameSpeeds.SUPERSPEED.value);&#xD;
			GameEntity.setGhostEaten(3, true);&#xD;
			inSpawn = false;&#xD;
			//System.out.println(&quot;Position: &quot; + this.getPozitionX() + &quot; &quot; + this.getPozitionY());&#xD;
			if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim &amp;&amp; this.getPozitionY() > 14 * cellDim) {&#xD;
				&#xD;
				this.setDirection(' ');&#xD;
				setGameState(GhostState.RESPAWN);&#xD;
				System.out.println(&quot;Clyde set to respawn!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//updates the target to outside of the ghost house after the player has eaten the set amount of pellets&#xD;
		//switches to SCATTER after the ghost has exited the ghost house&#xD;
		case SPAWN :&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(go) {&#xD;
				&#xD;
				setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
				GameEntity.setGhostEaten(3, true);&#xD;
				if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
						this.getPozitionY() &lt; 12 * cellDim &amp;&amp; this.getPozitionY() > 10 * cellDim) {&#xD;
					&#xD;
					setGameState(GhostState.SCATTER);&#xD;
					System.out.println(&quot;Clyde set to scatter!&quot;);&#xD;
				}&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(dir) {&#xD;
					&#xD;
					this.setDirection('D');&#xD;
					this.setCurrentImage('D', this.getGameState());&#xD;
					dir = false;&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('D');&#xD;
					this.setCurrentImage('D', this.getGameState());&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('U');&#xD;
					this.setCurrentImage('U', this.getGameState());&#xD;
					//System.out.println(&quot;Here I be&quot;);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if(goCounter >= 60) {&#xD;
				&#xD;
				go = true;&#xD;
				inSpawn = false;&#xD;
				this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			}&#xD;
			&#xD;
			break;&#xD;
			&#xD;
		//updates the target to outside of the ghost house&#xD;
		//switches to CHASE after the ghost has exited the ghost house&#xD;
		case RESPAWN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
			GameEntity.setGhostEaten(3, true);&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
					this.getPozitionY() &lt; 12 * cellDim &amp;&amp; this.getPozitionY() > 10 * cellDim) {&#xD;
				&#xD;
				setGameState(GhostState.CHASE);&#xD;
				System.out.println(&quot;Clyde set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//does nothing&#xD;
		//only for development purposes&#xD;
		case DISABLED :&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		//System.out.println(&quot;Clyde: &quot; + this.getGameState());&#xD;
		&#xD;
		//checks if Clyde has collided with the player and updates Clyde's state appropriately&#xD;
		if (this.checkPlayerColission()) {&#xD;
			&#xD;
			if(state == GhostState.FRIGHTENED) {			//if Clyde is in FRIGHTENED mode,&#xD;
															// then Clyde switches to EATEN upon player contact&#xD;
				&#xD;
				this.setGameState(GhostState.EATEN);&#xD;
				this.blinking = false;&#xD;
				Player.updateCurrentPoints(200 * Ghost.getMultiplier());&#xD;
				Ghost.updatePointsMultiplier(Ghost.getMultiplier() * 2);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(state != GhostState.EATEN) {&#xD;
					&#xD;
					//System.out.println(&quot;contact!&quot;);&#xD;
					setContact(true);					//if Clyde is neither in FRIGHTENED mode, nor in EATEN mode&#xD;
														// then Clyde eats PacMan&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//Clyde moves slower inside the ghost house and inside tunnels&#xD;
		if(inSpawn) {&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED20.value);&#xD;
			//System.out.println(&quot;Clyde in spawn&quot;);&#xD;
		}&#xD;
		else {&#xD;
			&#xD;
			if(this.getPozitionY() > 13 * cellDim + cellDim / 2 &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim) {&#xD;
				&#xD;
				if(this.getPozitionX() > 23 * cellDim || this.getPozitionX() &lt; 5 * cellDim) {&#xD;
					&#xD;
					this.setMovementSpeed(GameSpeeds.SPEED40.value);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		&#xD;
		move(getPlayerDirection());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxKmc0OzEeyj8q1of7NKLw" name="resetTimer" specification="_MiXVcEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>if(this.getGameState() == GhostState.FRIGHTENED) {&#xD;
			System.out.println(&quot;Clyde frightened!&quot;);&#xD;
&#xD;
			char oppositeDirection = do180();&#xD;
			&#xD;
			this.setDirection(oppositeDirection);&#xD;
		}&#xD;
		&#xD;
		timer = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxKmdEOzEeyj8q1of7NKLw" name="incrementCounter" specification="_MiXVcUOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>goCounter++;&#xD;
		System.out.println(&quot;Counter: &quot; + goCounter);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxLNgEOzEeyj8q1of7NKLw" name="resetGo" specification="_MiX8gEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>go = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxLNgUOzEeyj8q1of7NKLw" name="inSpawn" specification="_MiYjkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxLNgkOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//System.out.println(&quot;In spawn: &quot; + inSpawn);&#xD;
		return inSpawn;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MiWHUEOzEeyj8q1of7NKLw" name="action" method="_MxKmcEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MiWHUUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MiWuYEOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MiXVcEOzEeyj8q1of7NKLw" name="resetTimer" method="_MxKmc0OzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MiXVcUOzEeyj8q1of7NKLw" name="incrementCounter" isStatic="true" method="_MxKmdEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MiX8gEOzEeyj8q1of7NKLw" name="resetGo" method="_MxLNgEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MiYjkEOzEeyj8q1of7NKLw" name="inSpawn" isStatic="true" method="_MxLNgUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MiYjkUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MuCZ8EOzEeyj8q1of7NKLw" name="Clyde" method="_MxJ_YEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MuDoEEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MuDoEUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MuDBAEOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuDBAUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuDBAkOzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MuDoEkOzEeyj8q1of7NKLw" type="_MiTEAEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MidcEEOzEeyj8q1of7NKLw" name="Collectable">
        <ownedAttribute xmi:id="_Mvw4QEOzEeyj8q1of7NKLw" name="x" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MvxfUEOzEeyj8q1of7NKLw" name="y" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MvyGYEOzEeyj8q1of7NKLw" name="visible" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MvyGYUOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxL0kEOzEeyj8q1of7NKLw" name="Collectable" specification="_MifRQEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxL0kUOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.x = 0;&#xD;
		this.y = 0;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxL0kkOzEeyj8q1of7NKLw" name="Collectable" specification="_MigfYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxL0k0OzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxL0lEOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxL0lUOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.x = x;&#xD;
		this.y = y;&#xD;
		this.visible = true;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxMboEOzEeyj8q1of7NKLw" name="getVisibilityStatus" specification="_MihtgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxMboUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.visible;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxMbokOzEeyj8q1of7NKLw" name="setVisibilityStatus" specification="_Mii7oEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxMbo0OzEeyj8q1of7NKLw" name="status">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.visible = status;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MifRQEOzEeyj8q1of7NKLw" name="Collectable" method="_MxL0kEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Mif4UEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Mif4UUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Mif4UkOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MigfYEOzEeyj8q1of7NKLw" name="Collectable" method="_MxL0kkOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MihGcUOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MihGckOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MigfYUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MihGcEOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MihGc0OzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MihtgEOzEeyj8q1of7NKLw" name="getVisibilityStatus" method="_MxMboEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MiiUkEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mii7oEOzEeyj8q1of7NKLw" name="setVisibilityStatus" method="_MxMbokOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mii7oUOzEeyj8q1of7NKLw" name="status">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_MikJwEOzEeyj8q1of7NKLw" name="GameSpeeds">
        <ownedAttribute xmi:id="_Mv2X0EOzEeyj8q1of7NKLw" name="value" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_MiwXAEOzEeyj8q1of7NKLw" name="GameSpeeds" visibility="private" method="_MxNCsEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Miw-EEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MixlIEOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MiwXAUOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MixlIUOzEeyj8q1of7NKLw" type="_MikJwEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedLiteral xmi:id="_MilX4EOzEeyj8q1of7NKLw" name="SPEED100">
          <specification xmi:type="uml:Expression" xmi:id="_MilX4UOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxn5cEOzEeyj8q1of7NKLw" value="7"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_Mil-8EOzEeyj8q1of7NKLw" name="SPEED90">
          <specification xmi:type="uml:Expression" xmi:id="_Mil-8UOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxn5cUOzEeyj8q1of7NKLw" value="8"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MimmAEOzEeyj8q1of7NKLw" name="SPEED85">
          <specification xmi:type="uml:Expression" xmi:id="_MimmAUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxn5ckOzEeyj8q1of7NKLw" value="9"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MimmAkOzEeyj8q1of7NKLw" name="SPEED80">
          <specification xmi:type="uml:Expression" xmi:id="_MinNEEOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxn5c0OzEeyj8q1of7NKLw" value="10"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MinNEUOzEeyj8q1of7NKLw" name="SPEED75">
          <specification xmi:type="uml:Expression" xmi:id="_Min0IEOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxn5dEOzEeyj8q1of7NKLw" value="11"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_Min0IUOzEeyj8q1of7NKLw" name="SPEED70">
          <specification xmi:type="uml:Expression" xmi:id="_MiobMEOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoggEOzEeyj8q1of7NKLw" value="11"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MiobMUOzEeyj8q1of7NKLw" name="SPEED65">
          <specification xmi:type="uml:Expression" xmi:id="_MiobMkOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoggUOzEeyj8q1of7NKLw" value="12"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MipCQEOzEeyj8q1of7NKLw" name="SPEED60">
          <specification xmi:type="uml:Expression" xmi:id="_MipCQUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoggkOzEeyj8q1of7NKLw" value="13"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MippUEOzEeyj8q1of7NKLw" name="SPEED55">
          <specification xmi:type="uml:Expression" xmi:id="_MippUUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxogg0OzEeyj8q1of7NKLw" value="14"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MiqQYEOzEeyj8q1of7NKLw" name="SPEED50">
          <specification xmi:type="uml:Expression" xmi:id="_MiqQYUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoghEOzEeyj8q1of7NKLw" value="15"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_Miq3cEOzEeyj8q1of7NKLw" name="SPEED45">
          <specification xmi:type="uml:Expression" xmi:id="_Miq3cUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoghUOzEeyj8q1of7NKLw" value="16"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MiregEOzEeyj8q1of7NKLw" name="SPEED40">
          <specification xmi:type="uml:Expression" xmi:id="_MiregUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxoghkOzEeyj8q1of7NKLw" value="16"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MisFkEOzEeyj8q1of7NKLw" name="SPEED20">
          <specification xmi:type="uml:Expression" xmi:id="_MisFkUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_Mxogh0OzEeyj8q1of7NKLw" value="20"/>
          </specification>
        </ownedLiteral>
        <ownedLiteral xmi:id="_MissoEOzEeyj8q1of7NKLw" name="SUPERSPEED">
          <specification xmi:type="uml:Expression" xmi:id="_MissoUOzEeyj8q1of7NKLw">
            <operand xmi:type="uml:LiteralString" xmi:id="_MxogiEOzEeyj8q1of7NKLw" value="1"/>
          </specification>
        </ownedLiteral>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_Mi3EsEOzEeyj8q1of7NKLw" name="GhostState">
        <ownedLiteral xmi:id="_Mi3rwEOzEeyj8q1of7NKLw" name="SCATTER"/>
        <ownedLiteral xmi:id="_Mi4S0EOzEeyj8q1of7NKLw" name="CHASE"/>
        <ownedLiteral xmi:id="_Mi4S0UOzEeyj8q1of7NKLw" name="FRIGHTENED"/>
        <ownedLiteral xmi:id="_Mi4S0kOzEeyj8q1of7NKLw" name="EATEN"/>
        <ownedLiteral xmi:id="_Mi454EOzEeyj8q1of7NKLw" name="DISABLED"/>
        <ownedLiteral xmi:id="_Mi454UOzEeyj8q1of7NKLw" name="RESPAWN"/>
        <ownedLiteral xmi:id="_Mi5g8EOzEeyj8q1of7NKLw" name="SPAWN"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mi5g8UOzEeyj8q1of7NKLw" name="Walls">
        <ownedAttribute xmi:id="_Mv4NAEOzEeyj8q1of7NKLw" name="coords" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mv4NAUOzEeyj8q1of7NKLw" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mv4NA0OzEeyj8q1of7NKLw" value="new int[4]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxOQ0EOzEeyj8q1of7NKLw" name="Walls" specification="_Mi79MEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxOQ0UOzEeyj8q1of7NKLw" type="_Mi5g8UOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.coords[0] = 0;&#xD;
		this.coords[1] = 0;&#xD;
		this.coords[2] = 0;&#xD;
		this.coords[3] = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxOQ0kOzEeyj8q1of7NKLw" name="Walls" specification="_Mi9yYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxOQ00OzEeyj8q1of7NKLw" name="xi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxOQ1EOzEeyj8q1of7NKLw" name="xs">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxOQ1UOzEeyj8q1of7NKLw" name="yi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxOQ1kOzEeyj8q1of7NKLw" name="ys">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxOQ10OzEeyj8q1of7NKLw" type="_Mi5g8UOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.coords[0] = xi;&#xD;
		this.coords[1] = xs;&#xD;
		this.coords[2] = yi;&#xD;
		this.coords[3] = ys;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxO34EOzEeyj8q1of7NKLw" name="getWallCoordinates" specification="_MjA1sEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxO34UOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxO34kOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.coords;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mi79MEOzEeyj8q1of7NKLw" name="Walls" method="_MxOQ0EOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Mi8kQEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Mi8kQUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Mi8kQkOzEeyj8q1of7NKLw" type="_Mi5g8UOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Mi9yYEOzEeyj8q1of7NKLw" name="Walls" method="_MxOQ0kOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Mi_nkEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Mi_nkUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Mi-ZcEOzEeyj8q1of7NKLw" name="xi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mi-ZcUOzEeyj8q1of7NKLw" name="xs">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mi_AgEOzEeyj8q1of7NKLw" name="yi">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mi_AgUOzEeyj8q1of7NKLw" name="ys">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mi_nkkOzEeyj8q1of7NKLw" type="_Mi5g8UOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MjA1sEOzEeyj8q1of7NKLw" name="getWallCoordinates" method="_MxO34EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MjBcwEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MjBcwUOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MjDR8EOzEeyj8q1of7NKLw" name="SysData"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_MjEgEEOzEeyj8q1of7NKLw" name="Player">
        <generalization xmi:id="_MuKVwUOzEeyj8q1of7NKLw" general="_MkKFMEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_Mv6CMEOzEeyj8q1of7NKLw" name="inGame" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mv6CMUOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mv6pQUOzEeyj8q1of7NKLw" name="gamePaused">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mv73YEOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mv-6sEOzEeyj8q1of7NKLw" name="pelletCount" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwAv4UOzEeyj8q1of7NKLw" name="currentPoints" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwB-AEOzEeyj8q1of7NKLw" name="noLives" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwClEEOzEeyj8q1of7NKLw" name="movementSpeed" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwEaQUOzEeyj8q1of7NKLw" name="gameState" visibility="private" isStatic="true" type="_MjZ3QEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwFoYEOzEeyj8q1of7NKLw" name="pacDead" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyGakUOzEeyj8q1of7NKLw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxQGBkOzEeyj8q1of7NKLw" name="Player" specification="_MjHjYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxQGB0OzEeyj8q1of7NKLw" type="_MjEgEEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>pelletCount = 244;&#xD;
		currentPoints = 0;&#xD;
//TODO&#xD;
		//Add images&#xD;
//		this.upImg = new ImageIcon(&quot;Sprites/pacUp.gif&quot;);&#xD;
//		this.downImg = new ImageIcon(&quot;Sprites/pacDown.gif&quot;);&#xD;
//		this.leftImg = new ImageIcon(&quot;Sprites/pacLeft.gif&quot;);&#xD;
//		this.rightImg = new ImageIcon(&quot;Sprites/pacRight.gif&quot;);&#xD;
//		this.pausedImg = new ImageIcon(&quot;Sprites/pacPaused.png&quot;);&#xD;
//		this.pacDead = new ImageIcon(&quot;Sprites/pacDead.gif&quot;);&#xD;
&#xD;
		this.currentImg = pausedImg.getImage();&#xD;
&#xD;
		noLives = 3;&#xD;
		&#xD;
		updateGameState(PlayerState.NORMAL);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxQtEEOzEeyj8q1of7NKLw" name="setGameStatus" specification="_MjJYkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxQtEUOzEeyj8q1of7NKLw" name="inGame">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.inGame = inGame;&#xD;
		//System.out.println(&quot;Game status updated :&quot; + inGame);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxQtEkOzEeyj8q1of7NKLw" name="getGameStatus" specification="_MjKmsEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxQtE0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.inGame;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxRUIEOzEeyj8q1of7NKLw" name="updatePelletCount" specification="_MjLNwEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxRUIUOzEeyj8q1of7NKLw" name="pellets">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>pelletCount += pellets;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxRUIkOzEeyj8q1of7NKLw" name="getCurrentPoints" specification="_MjL00UOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxRUI0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return currentPoints;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxR7MEOzEeyj8q1of7NKLw" name="updateCurrentPoints" specification="_MjNC8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxR7MUOzEeyj8q1of7NKLw" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>currentPoints += points;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxR7MkOzEeyj8q1of7NKLw" name="updateLives" specification="_MjOREEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxR7M0OzEeyj8q1of7NKLw" name="increment">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>noLives += increment;&#xD;
		PacManView.updateLivesDisplay();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxR7NEOzEeyj8q1of7NKLw" name="getLives" specification="_MjO4IEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxR7NUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return noLives;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxSiQEOzEeyj8q1of7NKLw" name="reset" specification="_MjQGQEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>this.setPozX(14 * cellDim  + cellDim / 4);&#xD;
		this.setPozY(23 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
		this.setPlayerNextDirection(' ');&#xD;
		this.setDirection(' ');&#xD;
		this.currentImg = this.pausedImg.getImage();&#xD;
		updateGameState(PlayerState.NORMAL);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxSiQUOzEeyj8q1of7NKLw" name="updateGameState" specification="_MuJusEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxSiQkOzEeyj8q1of7NKLw" name="state" type="_MjZ3QEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>gameState = state;&#xD;
		&#xD;
		switch (gameState) {&#xD;
		case NORMAL :&#xD;
			setMovementSpeed(GameSpeeds.SPEED80.value);&#xD;
			break;&#xD;
			&#xD;
		case DOTS :&#xD;
			setMovementSpeed(GameSpeeds.SPEED70.value);&#xD;
			break;&#xD;
			&#xD;
		case FRIGHT :&#xD;
			setMovementSpeed(GameSpeeds.SPEED90.value);&#xD;
			break;&#xD;
		&#xD;
		case FRIGHT_DOTS :&#xD;
			setMovementSpeed(GameSpeeds.SPEED80.value);&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxSiQ0OzEeyj8q1of7NKLw" name="getGameState" specification="_MjQtUEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxSiREOzEeyj8q1of7NKLw" type="_MjZ3QEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>return gameState;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MjHjYEOzEeyj8q1of7NKLw" name="Player" method="_MxQGBkOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MjIKcEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MjIKcUOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MjIKckOzEeyj8q1of7NKLw" type="_MjEgEEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MjJYkEOzEeyj8q1of7NKLw" name="setGameStatus" method="_MxQtEEOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpHkEOzEeyj8q1of7NKLw">
            <body>updates whether the player is currently in a game</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjJ_oEOzEeyj8q1of7NKLw" name="inGame">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjKmsEOzEeyj8q1of7NKLw" name="getGameStatus" method="_MxQtEkOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpuoEOzEeyj8q1of7NKLw">
            <body>returns true is player is currently in game and false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjKmsUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjLNwEOzEeyj8q1of7NKLw" name="updatePelletCount" isStatic="true" method="_MxRUIEOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpuoUOzEeyj8q1of7NKLw">
            <body>increases current count of pellets by the amount 'pellets'</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjL00EOzEeyj8q1of7NKLw" name="pellets">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjL00UOzEeyj8q1of7NKLw" name="getCurrentPoints" method="_MxRUIkOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpuokOzEeyj8q1of7NKLw">
            <body>returns the current amount of points</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjMb4EOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjNC8EOzEeyj8q1of7NKLw" name="updateCurrentPoints" isStatic="true" method="_MxR7MEOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_Mxpuo0OzEeyj8q1of7NKLw">
            <body>increases current amount of points by the amount 'points'</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjNC8UOzEeyj8q1of7NKLw" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjOREEOzEeyj8q1of7NKLw" name="updateLives" isStatic="true" method="_MxR7MkOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpupEOzEeyj8q1of7NKLw">
            <body>increases current number of lives by the amount 'increment'</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjOREUOzEeyj8q1of7NKLw" name="increment">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjO4IEOzEeyj8q1of7NKLw" name="getLives" isStatic="true" method="_MxR7NEOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpupUOzEeyj8q1of7NKLw">
            <body>returns current amount of lives</body>
          </ownedComment>
          <ownedParameter xmi:id="_MjPfMEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjQGQEOzEeyj8q1of7NKLw" name="reset" method="_MxSiQEOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxpupkOzEeyj8q1of7NKLw">
            <body>resets player to starting position and updates related info</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_MjQtUEOzEeyj8q1of7NKLw" name="getGameState" isStatic="true" method="_MxSiQ0OzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxqVsUOzEeyj8q1of7NKLw">
            <body>returns current game state</body>
          </ownedComment>
          <ownedParameter xmi:id="_MuKVwEOzEeyj8q1of7NKLw" type="_MjZ3QEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MuJusEOzEeyj8q1of7NKLw" name="updateGameState" isStatic="true" method="_MxSiQUOzEeyj8q1of7NKLw">
          <ownedComment xmi:id="_MxqVsEOzEeyj8q1of7NKLw">
            <body>updates current game state and speed accordingly</body>
          </ownedComment>
          <ownedParameter xmi:id="_MuJusUOzEeyj8q1of7NKLw" name="state" type="_MjZ3QEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_MjZ3QEOzEeyj8q1of7NKLw" name="PlayerState">
        <ownedLiteral xmi:id="_MjbscEOzEeyj8q1of7NKLw" name="NORMAL"/>
        <ownedLiteral xmi:id="_MjbscUOzEeyj8q1of7NKLw" name="DOTS"/>
        <ownedLiteral xmi:id="_MjbsckOzEeyj8q1of7NKLw" name="FRIGHT"/>
        <ownedLiteral xmi:id="_MjcTgEOzEeyj8q1of7NKLw" name="FRIGHT_DOTS"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mjc6kEOzEeyj8q1of7NKLw" name="Question">
        <generalization xmi:id="_MuOAIEOzEeyj8q1of7NKLw" general="_MidcEEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MjevwEOzEeyj8q1of7NKLw" name="Pinky">
        <generalization xmi:id="_MuQcYEOzEeyj8q1of7NKLw" general="_Mj4YYEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwG2gEOzEeyj8q1of7NKLw" name="timer" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwG2gUOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwHdkUOzEeyj8q1of7NKLw" name="goCounter" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwIEoEOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwIEokOzEeyj8q1of7NKLw" name="go" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwIrsEOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwIrskOzEeyj8q1of7NKLw" name="dir" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwJSwEOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwJSwkOzEeyj8q1of7NKLw" name="inSpawn" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwJ50EOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwKg4UOzEeyj8q1of7NKLw" name="isDisabled" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwKg4kOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxTwYEOzEeyj8q1of7NKLw" name="Pinky" specification="_MuOnMEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxTwYUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxTwYkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxTwY0OzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxTwZEOzEeyj8q1of7NKLw" type="_MjevwEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>super(&quot;Sprites/upPinky.png&quot;, &quot;Sprites/downPinky.png&quot;, &quot;Sprites/leftPinky.png&quot;,&#xD;
								&quot;Sprites/rightPinky.png&quot;, &quot;Sprites/pausedPinky.png&quot;, x, y, player);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxTwZUOzEeyj8q1of7NKLw" name="action" specification="_MjhzEEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxTwZkOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxTwZ0OzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>GhostState state = this.getGameState();&#xD;
		//System.out.println(&quot; &quot; + this.getGameState());&#xD;
		&#xD;
		switch (state) {&#xD;
		&#xD;
		//updates the target to top left corner&#xD;
		//updates current speed to SCATTER speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case SCATTER :&#xD;
			setNextDirection(0 - 3 * cellDim, 0 - 3 * cellDim);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(1, false);&#xD;
			inSpawn = false;&#xD;
			//System.out.println(timer + &quot;&quot;);&#xD;
			if(timer >= 3500 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.CHASE);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				//System.out.println(&quot;Pinky set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//updates the target to the calculated coordinates&#xD;
		//updates current speed to CHASE speed&#xD;
		//switches to SCATTER after the time passes&#xD;
		case CHASE :&#xD;
			setNextDirection(x, y);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(1, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 10000 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.SCATTER);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				//System.out.println(&quot;Pinky set to scatter!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//chooses a random direction to travel&#xD;
		//updates current speed to FRIGHTENED speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case FRIGHTENED :&#xD;
			setFrightenedDirection();&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED50.value);&#xD;
			GameEntity.setGhostEaten(1, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 3000 / PacManController.getTimerSpeed()) {&#xD;
				setGameState(GhostState.CHASE);&#xD;
				Player.updateGameState(PlayerState.NORMAL);&#xD;
				blinking = false;&#xD;
				//System.out.println(&quot;Pinky set to chase!&quot;);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(timer >= 2200 / PacManController.getTimerSpeed()) {&#xD;
					&#xD;
					blinking = true;&#xD;
				}&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//sets the target as the respawn point&#xD;
		//updates current speed to SUPERSPEED&#xD;
		//switches to RESPAWN after the ghost's eyes reach the spawn point&#xD;
		case EATEN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 14 * cellDim + cellDim / 2);&#xD;
			this.setMovementSpeed(GameSpeeds.SUPERSPEED.value);&#xD;
			GameEntity.setGhostEaten(1, true);&#xD;
			inSpawn = false;&#xD;
			isDisabled = false;&#xD;
			//System.out.println(&quot;Position: &quot; + this.getPozitionX() + &quot; &quot; + this.getPozitionY());&#xD;
			if(this.getPozitionX() == 14 * cellDim  + cellDim / 4 &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim &amp;&amp; this.getPozitionY() > 13 * cellDim) {&#xD;
				&#xD;
				this.setDirection(' ');&#xD;
				setGameState(GhostState.RESPAWN);&#xD;
				//System.out.println(&quot;Pinky set to respawn!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//updates the target to outside of the ghost house after the player has eaten the set amount of pellets&#xD;
		//switches to SCATTER after the ghost has exited the ghost house&#xD;
		case SPAWN :&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(go) {&#xD;
				&#xD;
				setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
				GameEntity.setGhostEaten(1, true);&#xD;
				if(this.getPozitionX() == 14 * cellDim  + cellDim / 4 &amp;&amp;&#xD;
						this.getPozitionY() == 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset)) {&#xD;
					&#xD;
					setGameState(GhostState.SCATTER);&#xD;
					this.setDirection('L');&#xD;
					System.out.println(&quot;Pinky set to scatter!&quot;);&#xD;
				}&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(dir) {&#xD;
					&#xD;
					this.setDirection('U');&#xD;
					this.setCurrentImage('U', this.getGameState());&#xD;
					dir = false;&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('D');&#xD;
					this.setCurrentImage('D', this.getGameState());&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('U');&#xD;
					this.setCurrentImage('U', this.getGameState());&#xD;
					go = true;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			break;&#xD;
		&#xD;
		//updates the target to outside of the ghost house&#xD;
		//switches to CHASE after the ghost has exited the ghost house&#xD;
		case RESPAWN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
			GameEntity.setGhostEaten(1, true);&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(this.getPozitionX() == 14 * cellDim  + cellDim / 4 &amp;&amp;&#xD;
					this.getPozitionY() == 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset)) {&#xD;
				&#xD;
				setGameState(GhostState.CHASE);&#xD;
				//System.out.println(&quot;Pinky set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//does nothing&#xD;
		//only for development purposes&#xD;
		case DISABLED :&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		//System.out.println(&quot;Pinky: &quot; + this.getGameState());&#xD;
		&#xD;
		//checks if Pinky has collided with the player and updates Pinky's state appropriately&#xD;
		if (this.checkPlayerColission()) {&#xD;
			&#xD;
			if(state == GhostState.FRIGHTENED) {			//if Pinky is in FRIGHTENED mode,&#xD;
															// then Pinky switches to EATEN upon player contact&#xD;
				&#xD;
				this.setGameState(GhostState.EATEN);&#xD;
				this.blinking = false;&#xD;
				Player.updateCurrentPoints(200 * Ghost.getMultiplier());&#xD;
				Ghost.updatePointsMultiplier(Ghost.getMultiplier() * 2);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(state != GhostState.EATEN) {&#xD;
					&#xD;
					//System.out.println(&quot;contact!&quot;);&#xD;
					setContact(true);						//if Pinky is neither in FRIGHTENED mode, nor in EATEN mode&#xD;
															// then Pinky eats PacMan&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//System.out.println(&quot;Disabled: &quot; + isDisabled);&#xD;
		&#xD;
		//Pinky moves slower inside the ghost house and inside tunnels&#xD;
		if(inSpawn) {&#xD;
			&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED20.value);&#xD;
		}&#xD;
		else {&#xD;
			&#xD;
			if(this.getPozitionY() > 13 * cellDim + cellDim / 2 &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim) {&#xD;
				&#xD;
				if(this.getPozitionX() > 23 * cellDim || this.getPozitionX() &lt; 5 * cellDim) {&#xD;
					&#xD;
					this.setMovementSpeed(GameSpeeds.SPEED40.value);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		move(getPlayerDirection());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxUXcEOzEeyj8q1of7NKLw" name="resetTimer" specification="_MjjBMEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>if(this.getGameState() == GhostState.FRIGHTENED) {&#xD;
			System.out.println(&quot;Pinky frightened!&quot;);&#xD;
&#xD;
			char oppositeDirection = do180();&#xD;
			&#xD;
			this.setDirection(oppositeDirection);&#xD;
		}&#xD;
		&#xD;
		timer = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxUXcUOzEeyj8q1of7NKLw" name="incrementCounter" specification="_MjkPUEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>goCounter++;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxUXckOzEeyj8q1of7NKLw" name="resetGo" specification="_MjldcEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>go = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxUXc0OzEeyj8q1of7NKLw" name="inSpawn" specification="_MjmrkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxUXdEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return inSpawn;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxU-gEOzEeyj8q1of7NKLw" name="setDisabled" specification="_MjpH0EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxU-gUOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>isDisabled = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxU-gkOzEeyj8q1of7NKLw" name="isDisabled" specification="_Mjpu4EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxU-g0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return isDisabled;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MjhzEEOzEeyj8q1of7NKLw" name="action" method="_MxTwZUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MjhzEUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MjiaIEOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjjBMEOzEeyj8q1of7NKLw" name="resetTimer" method="_MxUXcEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjkPUEOzEeyj8q1of7NKLw" name="incrementCounter" isStatic="true" method="_MxUXcUOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjldcEOzEeyj8q1of7NKLw" name="resetGo" method="_MxUXckOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjmrkEOzEeyj8q1of7NKLw" name="inSpawn" isStatic="true" method="_MxUXc0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MjnSoEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjpH0EOzEeyj8q1of7NKLw" name="setDisabled" isStatic="true" method="_MxU-gEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MjpH0UOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mjpu4EOzEeyj8q1of7NKLw" name="isDisabled" isStatic="true" method="_MxU-gkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mjpu4UOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MuOnMEOzEeyj8q1of7NKLw" name="Pinky" method="_MxTwYEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MuPOQ0OzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MuPOREOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MuPOQEOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuPOQUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuPOQkOzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MuP1UEOzEeyj8q1of7NKLw" type="_MjevwEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MjunYEOzEeyj8q1of7NKLw" name="Inky">
        <generalization xmi:id="_MuTfsEOzEeyj8q1of7NKLw" general="_Mj4YYEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwLvAEOzEeyj8q1of7NKLw" name="timer" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwLvAUOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwMWEUOzEeyj8q1of7NKLw" name="goCounter" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwMWEkOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwM9IUOzEeyj8q1of7NKLw" name="go" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwM9IkOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwNkMEOzEeyj8q1of7NKLw" name="dir" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwNkMUOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwOLQUOzEeyj8q1of7NKLw" name="inSpawn" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwOLQkOzEeyj8q1of7NKLw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwOyUUOzEeyj8q1of7NKLw" name="isDisabled" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwOyUkOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxU-hEOzEeyj8q1of7NKLw" name="Inky" specification="_MuSRkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxU-hUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxU-hkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxU-h0OzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxU-iEOzEeyj8q1of7NKLw" type="_MjunYEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>super(&quot;Sprites/upInky.png&quot;, &quot;Sprites/downInky.png&quot;, &quot;Sprites/leftInky.png&quot;,&#xD;
								&quot;Sprites/rightInky.png&quot;, &quot;Sprites/pausedInky.png&quot;, x, y, player);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxVlkEOzEeyj8q1of7NKLw" name="action" specification="_MjxDoEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxVlkUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxVlkkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>GhostState state = this.getGameState();&#xD;
		//System.out.println(&quot; &quot; + this.getGameState());&#xD;
		&#xD;
		switch (state) {&#xD;
		&#xD;
		//updates the target to bottom left corner&#xD;
		//updates current speed to SCATTER speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case SCATTER :&#xD;
			setNextDirection(0 - 3 * cellDim, 34 * cellDim);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(2, false);&#xD;
			inSpawn = false;&#xD;
			//System.out.println(timer + &quot;&quot;);&#xD;
			if(timer >= 3500 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.CHASE);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				System.out.println(&quot;Inky set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//updates the target to the calculated coordinates&#xD;
		//updates current speed to CHASE speed&#xD;
		//switches to SCATTER after the time passes&#xD;
		case CHASE :&#xD;
			setNextDirection(x, y);&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			GameEntity.setGhostEaten(2, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 10000 / PacManController.getTimerSpeed()) {&#xD;
				timer = 0;&#xD;
				setGameState(GhostState.SCATTER);&#xD;
				char oppositeDirection = do180();&#xD;
				&#xD;
				this.setDirection(oppositeDirection);&#xD;
				System.out.println(&quot;Inky set to scatter!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//chooses a random direction to travel&#xD;
		//updates current speed to FRIGHTENED speed&#xD;
		//switches to CHASE after the time passes&#xD;
		case FRIGHTENED :&#xD;
			setFrightenedDirection();&#xD;
			timer += this.getMovementSpeed();&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED50.value);&#xD;
			GameEntity.setGhostEaten(2, false);&#xD;
			inSpawn = false;&#xD;
			if(timer >= 3000 / PacManController.getTimerSpeed()) {&#xD;
				setGameState(GhostState.CHASE);&#xD;
				Player.updateGameState(PlayerState.NORMAL);&#xD;
				blinking = false;&#xD;
				System.out.println(&quot;Inky set to chase!&quot;);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(timer >= 2200 / PacManController.getTimerSpeed()) {&#xD;
					&#xD;
					blinking = true;&#xD;
				}&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//sets the target as the respawn point&#xD;
		//updates current speed to SUPERSPEED&#xD;
		//switches to RESPAWN after the ghost's eyes reach the spawn point&#xD;
		case EATEN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 14 * cellDim + cellDim / 2);&#xD;
			this.setMovementSpeed(GameSpeeds.SUPERSPEED.value);&#xD;
			GameEntity.setGhostEaten(2, true);&#xD;
			inSpawn = false;&#xD;
			//System.out.println(&quot;Position: &quot; + this.getPozitionX() + &quot; &quot; + this.getPozitionY());&#xD;
			if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim &amp;&amp; this.getPozitionY() > 14 * cellDim) {&#xD;
				&#xD;
				this.setDirection(' ');&#xD;
				setGameState(GhostState.RESPAWN);&#xD;
				System.out.println(&quot;Inky set to respawn!&quot;);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		//updates the target to outside of the ghost house after the player has eaten the set amount of pellets&#xD;
		//switches to SCATTER after the ghost has exited the ghost house&#xD;
		case SPAWN :&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(go) {&#xD;
				&#xD;
				setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
				GameEntity.setGhostEaten(2, true);&#xD;
				if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
						this.getPozitionY() &lt; 12 * cellDim &amp;&amp; this.getPozitionY() > 10 * cellDim) {&#xD;
					&#xD;
					setGameState(GhostState.SCATTER);&#xD;
					System.out.println(&quot;Inky set to scatter!&quot;);&#xD;
				}&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(dir) {&#xD;
					&#xD;
					this.setDirection('D');&#xD;
					this.setCurrentImage('D', this.getGameState());&#xD;
					dir = false;&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('D');&#xD;
					this.setCurrentImage('D', this.getGameState());&#xD;
				}&#xD;
				&#xD;
				if(this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
						|| this.checkWalls(this.getPozitionX(), this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
					&#xD;
					this.setDirection('U');&#xD;
					this.setCurrentImage('U', this.getGameState());&#xD;
					//System.out.println(&quot;Here I be&quot;);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if(goCounter >= 30) {&#xD;
				&#xD;
				go = true;&#xD;
				inSpawn = false;&#xD;
				this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
			}&#xD;
			&#xD;
			break;&#xD;
			&#xD;
		//updates the target to outside of the ghost house&#xD;
		//switches to CHASE after the ghost has exited the ghost house&#xD;
		case RESPAWN :&#xD;
			setNextDirection(14 * cellDim  + cellDim / 4, 11 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
			GameEntity.setGhostEaten(2, true);&#xD;
			&#xD;
			inSpawn = true;&#xD;
			&#xD;
			if(this.getPozitionX() > 12 * cellDim &amp;&amp; this.getPozitionX() &lt; 16 * cellDim &amp;&amp;&#xD;
					this.getPozitionY() &lt; 12 * cellDim &amp;&amp; this.getPozitionY() > 10 * cellDim) {&#xD;
				&#xD;
				setGameState(GhostState.CHASE);&#xD;
				System.out.println(&quot;Inky set to chase!&quot;);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//does nothing&#xD;
		//only for development purposes&#xD;
		case DISABLED :&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		//System.out.println(&quot;Inky: &quot; + this.getGameState());&#xD;
		&#xD;
		//checks if Inky has collided with the player and updates Inky's state appropriately&#xD;
		if (this.checkPlayerColission()) {&#xD;
			&#xD;
			if(state == GhostState.FRIGHTENED) {		//if Inky is in FRIGHTENED mode,&#xD;
														// then Inky switches to EATEN upon player contact&#xD;
				&#xD;
				this.setGameState(GhostState.EATEN);&#xD;
				this.blinking = false;&#xD;
				Player.updateCurrentPoints(200 * Ghost.getMultiplier());&#xD;
				Ghost.updatePointsMultiplier(Ghost.getMultiplier() * 2);&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				if(state != GhostState.EATEN) {&#xD;
					&#xD;
					//System.out.println(&quot;contact!&quot;);&#xD;
					setContact(true);					//if Inky is neither in FRIGHTENED mode, nor in EATEN mode&#xD;
														// then Inky eats PacMan&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Inky moves slower inside the ghost house and inside tunnels&#xD;
		if(inSpawn) {&#xD;
			this.setMovementSpeed(GameSpeeds.SPEED20.value);&#xD;
			//System.out.println(&quot;Inky in spawn&quot;);&#xD;
		}&#xD;
		else {&#xD;
			&#xD;
			if(this.getPozitionY() > 13 * cellDim + cellDim / 2 &amp;&amp;&#xD;
					this.getPozitionY() &lt; 16 * cellDim) {&#xD;
				&#xD;
				if(this.getPozitionX() > 23 * cellDim || this.getPozitionX() &lt; 5 * cellDim) {&#xD;
					&#xD;
					this.setMovementSpeed(GameSpeeds.SPEED40.value);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		&#xD;
		move(getPlayerDirection());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxVlk0OzEeyj8q1of7NKLw" name="resetTimer" specification="_MjxqsEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>if(this.getGameState() == GhostState.FRIGHTENED) {&#xD;
			System.out.println(&quot;Inky frightened!&quot;);&#xD;
&#xD;
			char oppositeDirection = do180();&#xD;
			&#xD;
			this.setDirection(oppositeDirection);&#xD;
		}&#xD;
		&#xD;
		timer = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxVllEOzEeyj8q1of7NKLw" name="incrementCounter" specification="_MjxqsUOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>goCounter++;&#xD;
		//System.out.println(&quot;Counter: &quot; + goCounter);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxWMoEOzEeyj8q1of7NKLw" name="resetGo" specification="_MjyRwEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>go = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxWMoUOzEeyj8q1of7NKLw" name="inSpawn" specification="_MjyRwUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxWMokOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return inSpawn;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxWMo0OzEeyj8q1of7NKLw" name="setDisabled" specification="_Mjy40UOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxWMpEOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>isDisabled = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxWzsEOzEeyj8q1of7NKLw" name="isDisabled" specification="_Mjzf4EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxWzsUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return isDisabled;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MjxDoEOzEeyj8q1of7NKLw" name="action" method="_MxVlkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MjxDoUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MjxDokOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MjxqsEOzEeyj8q1of7NKLw" name="resetTimer" method="_MxVlk0OzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjxqsUOzEeyj8q1of7NKLw" name="incrementCounter" isStatic="true" method="_MxVllEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjyRwEOzEeyj8q1of7NKLw" name="resetGo" method="_MxWMoEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MjyRwUOzEeyj8q1of7NKLw" name="inSpawn" isStatic="true" method="_MxWMoUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mjy40EOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mjy40UOzEeyj8q1of7NKLw" name="setDisabled" isStatic="true" method="_MxWMo0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mjy40kOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mjzf4EOzEeyj8q1of7NKLw" name="isDisabled" isStatic="true" method="_MxWzsEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mjzf4UOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MuSRkEOzEeyj8q1of7NKLw" name="Inky" method="_MxU-hEOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_MuS4okOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MuS4o0OzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_MuSRkUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuS4oEOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MuS4oUOzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MuS4pEOzEeyj8q1of7NKLw" type="_MjunYEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mj4YYEOzEeyj8q1of7NKLw" name="Ghost">
        <generalization xmi:id="_MugUAUOzEeyj8q1of7NKLw" general="_MkKFMEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwQAcEOzEeyj8q1of7NKLw" name="playerInstance" visibility="private" isStatic="true" type="_MjEgEEOzEeyj8q1of7NKLw" association="_MyHosUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwQngEOzEeyj8q1of7NKLw" name="gameState" type="_Mi3EsEOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwQngUOzEeyj8q1of7NKLw" value="GhostState.SCATTER"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwROkEOzEeyj8q1of7NKLw" name="pointsMultiplier" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwR1oEOzEeyj8q1of7NKLw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwTq0EOzEeyj8q1of7NKLw" name="contact" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwTq0UOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwU48EOzEeyj8q1of7NKLw" name="blinking" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwU48UOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwWHEEOzEeyj8q1of7NKLw" name="on" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwWHEUOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwWuIUOzEeyj8q1of7NKLw" name="on2" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwXVMEOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwX8QEOzEeyj8q1of7NKLw" name="movementSpeed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwYjUEOzEeyj8q1of7NKLw" name="frightened" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyIPwUOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwYjUUOzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/frightenedGhost.png&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwZKYEOzEeyj8q1of7NKLw" name="frightenedBlink" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyI20UOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwZKYUOzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/frightenedGhostBlink.png&quot;)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxYB0EOzEeyj8q1of7NKLw" name="Ghost" specification="_Mud3wEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxYB0UOzEeyj8q1of7NKLw" name="upGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB0kOzEeyj8q1of7NKLw" name="downGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB00OzEeyj8q1of7NKLw" name="leftGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB1EOzEeyj8q1of7NKLw" name="rightGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB1UOzEeyj8q1of7NKLw" name="pausedGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB1kOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB10OzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB2EOzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxYB2UOzEeyj8q1of7NKLw" type="_Mj4YYEOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>this.upImg = new ImageIcon(upGhost);&#xD;
		this.downImg = new ImageIcon(downGhost);&#xD;
		this.leftImg = new ImageIcon(leftGhost);&#xD;
		this.rightImg = new ImageIcon(rightGhost);&#xD;
		this.pausedImg = new ImageIcon(pausedGhost);&#xD;
&#xD;
		//this.setPlayerNextDirection('L');&#xD;
		this.currentImg = pausedImg.getImage();&#xD;
		&#xD;
		this.setPozX(x);&#xD;
		this.setPozY(y);&#xD;
		//TODO&#xD;
		//this.setMovementSpeed(GameSpeeds.SPEED75.value);&#xD;
&#xD;
		&#xD;
		playerInstance = player;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxYB2kOzEeyj8q1of7NKLw" name="setNextDirection" specification="_Mj938EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxYB20OzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxYB3EOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>char[] direction = {' ', ' ', ' ', ' '};		// 0 = UP  1 = DOWN  2 = LEFT  3 = RIGHT		&#xD;
		int[] dist = {0, 0, 0, 0};&#xD;
		&#xD;
		int distMin = 999999;&#xD;
&#xD;
&#xD;
		//System.out.println(&quot;Position: &quot; + this.getPozitionX() + &quot; &quot; + this.getPozitionY());&#xD;
		&#xD;
		if(getPlayerDirection() != 'D' &amp;&amp; !checkUpDirectionException()) {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX(), this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
				direction[0] = 'U';&#xD;
				dist[0] = (int) ( Math.pow(this.getPozitionX() - x, 2) + Math.pow(this.getPozitionY() - cellDim - y, 2) );&#xD;
				if(dist[0] &lt; distMin) {&#xD;
					distMin = dist[0];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if(getPlayerDirection() != 'U') {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX(), this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
				direction[1] = 'D';&#xD;
				dist[1] = (int) ( Math.pow(this.getPozitionX() - x, 2) + Math.pow(this.getPozitionY() + cellDim - y, 2) );&#xD;
				if(dist[1] &lt; distMin) {&#xD;
					distMin = dist[1];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(getPlayerDirection() != 'R') {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY())) {&#xD;
				direction[2] = 'L';&#xD;
				dist[2] = (int) ( Math.pow(this.getPozitionX() - cellDim - x, 2) + Math.pow(this.getPozitionY() - y, 2) );&#xD;
				if(dist[2] &lt; distMin) {&#xD;
					distMin = dist[2];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(getPlayerDirection() != 'L') {&#xD;
			if (!this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY())) {&#xD;
				direction[3] = 'R';&#xD;
				dist[3] = (int) ( Math.pow(this.getPozitionX() + cellDim - x, 2) + Math.pow(this.getPozitionY() - y, 2) );&#xD;
				if(dist[3] &lt; distMin) {&#xD;
					distMin = dist[3];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//System.out.println(&quot;Directiile posibile: &quot; + direction[0] + &quot; &quot; + direction[1] + &quot; &quot; + direction[2] + &quot; &quot; + direction[3]);&#xD;
		&#xD;
		for(int i = 0; i &lt; 4; i++) {&#xD;
			if(direction[i] != ' ') {&#xD;
				if(dist[i] == distMin) {&#xD;
					this.setDirection(direction[i]);&#xD;
					this.setCurrentImage(direction[i], this.getGameState());&#xD;
					//System.out.println(&quot;Chose direction: &quot; + direction[i]);&#xD;
					i = 10;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxYB3UOzEeyj8q1of7NKLw" name="setFrightenedDirection" specification="_Mj-fAEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>char[] direction = {' ', ' ', ' ', ' '};		// 0 = UP  1 = DOWN  2 = LEFT  3 = RIGHT		&#xD;
		&#xD;
		//System.out.println(&quot;Position: &quot; + this.getPozitionX() + &quot; &quot; + this.getPozitionY());&#xD;
		&#xD;
		int k = 0;&#xD;
		&#xD;
		if(getPlayerDirection() != 'D') {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() - cellDim - (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() - cellDim - (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX(), this.getPozitionY() - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
				direction[0] = 'U';&#xD;
				k++;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if(getPlayerDirection() != 'U') {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim, this.getPozitionY() + cellDim + (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim, this.getPozitionY() + cellDim + (cellDim + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim / 2, this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX(), this.getPozitionY() + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
				direction[1] = 'D';&#xD;
				k++;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(getPlayerDirection() != 'R') {&#xD;
			if (!this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() - cellDim - (cellDim / 8 + cellOffset), this.getPozitionY())) {&#xD;
				direction[2] = 'L';&#xD;
				k++;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(getPlayerDirection() != 'L') {&#xD;
			if (!this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim + cellOffset), this.getPozitionY() - cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim + cellOffset), this.getPozitionY() + cellDim)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY() + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.getPozitionX() + cellDim + (cellDim / 8 + cellOffset), this.getPozitionY())) {&#xD;
				direction[3] = 'R';&#xD;
				k++;&#xD;
			}&#xD;
		}&#xD;
				&#xD;
		int i = (int) (Math.random() % 4);&#xD;
		&#xD;
		if(k > 0) {&#xD;
			while(direction[i] == ' ') {&#xD;
			&#xD;
				i = (int) ((Math.random() * 100) % 4);&#xD;
			}&#xD;
			&#xD;
			this.setDirection(direction[i]);&#xD;
			&#xD;
			//before changing back to normal mode, the ghost blink to show the immediate change&#xD;
			if(this.isBlinking()) {&#xD;
				if(on == 7) {&#xD;
					&#xD;
					on2 = !on2;&#xD;
					on = 0;&#xD;
				}&#xD;
				else {&#xD;
					&#xD;
					on ++;&#xD;
				}&#xD;
				&#xD;
				if(on2) {&#xD;
					&#xD;
					this.currentImg = frightenedBlink.getImage();&#xD;
				}&#xD;
				else {&#xD;
					&#xD;
					this.currentImg = frightened.getImage();&#xD;
				}&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				this.currentImg = frightened.getImage();&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxYo4EOzEeyj8q1of7NKLw" name="checkPlayerColission" specification="_Mj_GEEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxYo4UOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(playerInstance.getPozitionX() >= this.getPozitionX() - cellDim &amp;&amp; playerInstance.getPozitionX() &lt;= this.getPozitionX() + cellDim &amp;&amp;&#xD;
					playerInstance.getPozitionY() >= this.getPozitionY() - cellDim &amp;&amp; playerInstance.getPozitionY() &lt;= this.getPozitionY() + cellDim) {&#xD;
			if(this.gameState != GhostState.FRIGHTENED &amp;&amp; this.gameState != GhostState.EATEN) {	//if a collision has been detected and the ghost is either&#xD;
				PacManController.setDyingAnimationState(true);			// in CHASE or in SCATTER, then PacMan gets eaten and the death animation is displayed&#xD;
				PacManController.resetAnimationTimer();&#xD;
				PacManController.resetGhosts(cellDim, cellOffset);&#xD;
				this.setGameState(GhostState.DISABLED);&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxYo4kOzEeyj8q1of7NKLw" name="playerContact" specification="_Mufs8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxYo40OzEeyj8q1of7NKLw" name="state" type="_Mi3EsEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MxYo5EOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(state != GhostState.EATEN &amp;&amp; state != GhostState.FRIGHTENED) {&#xD;
			&#xD;
			return contact;&#xD;
		}&#xD;
		&#xD;
		else return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxZP8EOzEeyj8q1of7NKLw" name="setContact" specification="_Mj_tIEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxZP8UOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>contact = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxZ3AEOzEeyj8q1of7NKLw" name="setMovementSpeed" specification="_MkA7QEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxZ3AUOzEeyj8q1of7NKLw" name="speed">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.movementSpeed = speed;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxaeEEOzEeyj8q1of7NKLw" name="getMovementSpeed" specification="_MkBiUEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxaeEUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.movementSpeed;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxaeEkOzEeyj8q1of7NKLw" name="do180" specification="_MkCJYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxaeE0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>char oppositeDirection = ' ';&#xD;
		char currentDireciton = this.getPlayerDirection();&#xD;
		&#xD;
		switch (currentDireciton) {&#xD;
		&#xD;
		case 'U' :&#xD;
			oppositeDirection = 'D';&#xD;
			break;&#xD;
			&#xD;
		case 'D' :&#xD;
			oppositeDirection = 'U';&#xD;
			break;&#xD;
			&#xD;
		case 'L' :&#xD;
			oppositeDirection = 'R';&#xD;
			break;&#xD;
			&#xD;
		case 'R' :&#xD;
			oppositeDirection = 'L';&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		return oppositeDirection;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxaeFEOzEeyj8q1of7NKLw" name="checkUpDirectionException" specification="_MkCwcUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxbFIEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(this.getPozitionX() > 10 * cellDim &amp;&amp; this.getPozitionX() &lt; 17 * cellDim) {&#xD;
			&#xD;
			if((this.getPozitionY() > 11 * cellDim &amp;&amp; this.getPozitionY() &lt; 12 * cellDim) ||&#xD;
					(this.getPozitionY() > 23 * cellDim &amp;&amp; this.getPozitionY() &lt; 24 * cellDim)) {&#xD;
				&#xD;
				return true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxbFIUOzEeyj8q1of7NKLw" name="getMultiplier" specification="_MkDXgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxbFIkOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return pointsMultiplier;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxbFI0OzEeyj8q1of7NKLw" name="updatePointsMultiplier" specification="_MkD-kEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxbFJEOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>pointsMultiplier = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxbFJUOzEeyj8q1of7NKLw" name="isBlinking" specification="_MkEloEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxbFJkOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.blinking;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mj938EOzEeyj8q1of7NKLw" name="setNextDirection" method="_MxYB2kOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mj938UOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mj938kOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mj-fAEOzEeyj8q1of7NKLw" name="setFrightenedDirection" method="_MxYB3UOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_Mj_GEEOzEeyj8q1of7NKLw" name="checkPlayerColission" method="_MxYo4EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mj_GEUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mj_tIEOzEeyj8q1of7NKLw" name="setContact" isStatic="true" method="_MxZP8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkAUMEOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkA7QEOzEeyj8q1of7NKLw" name="setMovementSpeed" method="_MxZ3AEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkA7QUOzEeyj8q1of7NKLw" name="speed">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkBiUEOzEeyj8q1of7NKLw" name="getMovementSpeed" method="_MxaeEEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkBiUUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkCJYEOzEeyj8q1of7NKLw" name="do180" method="_MxaeEkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkCwcEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkCwcUOzEeyj8q1of7NKLw" name="checkUpDirectionException" visibility="private" method="_MxaeFEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkCwckOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkDXgEOzEeyj8q1of7NKLw" name="getMultiplier" isStatic="true" method="_MxbFIUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkDXgUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkD-kEOzEeyj8q1of7NKLw" name="updatePointsMultiplier" isStatic="true" method="_MxbFI0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkD-kUOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkEloEOzEeyj8q1of7NKLw" name="isBlinking" method="_MxbFJUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkEloUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mud3wEOzEeyj8q1of7NKLw" name="Ghost" method="_MxYB0EOzEeyj8q1of7NKLw" raisedException="_MtSMAEOzEeyj8q1of7NKLw">
          <eAnnotations xmi:id="_Muee00OzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Muee1EOzEeyj8q1of7NKLw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Mud3wUOzEeyj8q1of7NKLw" name="upGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mud3wkOzEeyj8q1of7NKLw" name="downGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mud3w0OzEeyj8q1of7NKLw" name="leftGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mud3xEOzEeyj8q1of7NKLw" name="rightGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mud3xUOzEeyj8q1of7NKLw" name="pausedGhost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Muee0EOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Muee0UOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Muee0kOzEeyj8q1of7NKLw" name="player" type="_MjEgEEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_Muee1UOzEeyj8q1of7NKLw" type="_Mj4YYEOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Mufs8EOzEeyj8q1of7NKLw" name="playerContact" isStatic="true" method="_MxYo4kOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mufs8UOzEeyj8q1of7NKLw" name="state" type="_Mi3EsEOzEeyj8q1of7NKLw"/>
          <ownedParameter xmi:id="_MugUAEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MkKFMEOzEeyj8q1of7NKLw" name="GameEntity">
        <ownedAttribute xmi:id="_MwaYgEOzEeyj8q1of7NKLw" name="pozX" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mwa_kEOzEeyj8q1of7NKLw" name="pozY" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwbmoUOzEeyj8q1of7NKLw" name="cellDim" visibility="protected" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mwc0wEOzEeyj8q1of7NKLw" name="cellOffset" visibility="protected" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Mwc0wUOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mwdb0UOzEeyj8q1of7NKLw" name="mazeWidth" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MweC4UOzEeyj8q1of7NKLw" name="mazeHeight" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwfRAEOzEeyj8q1of7NKLw" name="direction" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwfRAUOzEeyj8q1of7NKLw" value="' '"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mwf4EUOzEeyj8q1of7NKLw" name="nextDirection" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwgfIEOzEeyj8q1of7NKLw" value="' '"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwgfIUOzEeyj8q1of7NKLw" name="k" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwgfIkOzEeyj8q1of7NKLw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwhGMEOzEeyj8q1of7NKLw" name="frightened" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwhGMUOzEeyj8q1of7NKLw" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwhtQEOzEeyj8q1of7NKLw" name="eatenGhosts" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwhtQUOzEeyj8q1of7NKLw" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwhtQ0OzEeyj8q1of7NKLw" value="{ false, false, false}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwiUUUOzEeyj8q1of7NKLw" name="wallArray" visibility="private" isStatic="true" type="_Mi5g8UOzEeyj8q1of7NKLw" association="_MyJd4UOzEeyj8q1of7NKLw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwiUUkOzEeyj8q1of7NKLw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mwi7YUOzEeyj8q1of7NKLw" name="smallPelets" visibility="private" isStatic="true" type="_MidcEEOzEeyj8q1of7NKLw" association="_MyKE8UOzEeyj8q1of7NKLw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwjicEOzEeyj8q1of7NKLw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwkJgUOzEeyj8q1of7NKLw" name="bigPelets" visibility="private" isStatic="true" type="_MidcEEOzEeyj8q1of7NKLw" association="_MyKsAUOzEeyj8q1of7NKLw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MwkJgkOzEeyj8q1of7NKLw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwkwkkOzEeyj8q1of7NKLw" name="upImg" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyNIQEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_Mwl-sEOzEeyj8q1of7NKLw" name="downImg" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyNvUUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwnM0EOzEeyj8q1of7NKLw" name="leftImg" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyPkgEOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_Mwoa8EOzEeyj8q1of7NKLw" name="rightImg" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyQyoUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwppEEOzEeyj8q1of7NKLw" name="pausedImg" visibility="protected" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MySAwUOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_Mwq3MEOzEeyj8q1of7NKLw" name="currentImg" visibility="protected" type="_MuY_QUOzEeyj8q1of7NKLw" association="_MyTO4UOzEeyj8q1of7NKLw"/>
        <ownedAttribute xmi:id="_MwreQUOzEeyj8q1of7NKLw" name="eyesUp" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyUdAEOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwsFUEOzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/ghostEyesUp.png&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwsFUkOzEeyj8q1of7NKLw" name="eyesDown" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyVEEEOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwssYEOzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/ghostEyesDown.png&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwssYkOzEeyj8q1of7NKLw" name="eyesLeft" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyVrIEOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwtTcEOzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/ghostEyesLeft.png&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MwtTckOzEeyj8q1of7NKLw" name="eyesRight" visibility="protected" isStatic="true" type="_MuH5gEOzEeyj8q1of7NKLw" association="_MyWSMEOzEeyj8q1of7NKLw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_MwtTc0OzEeyj8q1of7NKLw" value="new ImageIcon(&quot;Sprites/ghostEyesRight.png&quot;)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxcTQEOzEeyj8q1of7NKLw" name="changeDirection" specification="_MkPkwEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>char direction = this.nextDirection;&#xD;
		int offset = (cellDim / 8 + cellOffset);&#xD;
&#xD;
		switch (direction) {&#xD;
		case ' ':&#xD;
			break;&#xD;
&#xD;
			//check if the path upwards is clear&#xD;
		case 'U':&#xD;
			if (!this.checkWalls(this.pozX - cellDim + offset, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim - offset, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim / 2, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim / 2, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX, this.pozY - cellDim - (cellDim / 8 + cellOffset))) {&#xD;
				this.direction = direction;&#xD;
				this.currentImg = this.upImg.getImage();&#xD;
			}&#xD;
			break;&#xD;
&#xD;
			//check if the path downwards is clear&#xD;
		case 'D':&#xD;
			if (!this.checkWalls(this.pozX - cellDim + offset, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim - offset, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim / 2, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim / 2, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX, this.pozY + cellDim + (cellDim / 8 + cellOffset))) {&#xD;
				this.direction = direction;&#xD;
				this.currentImg = this.downImg.getImage();&#xD;
			}&#xD;
			break;&#xD;
&#xD;
			//check if the path leftwards is clear&#xD;
		case 'L':&#xD;
			if (!this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY - cellDim + offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY + cellDim - offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY)) {&#xD;
				this.direction = direction;&#xD;
				this.currentImg = this.leftImg.getImage();&#xD;
			}&#xD;
			break;&#xD;
&#xD;
			//check if the path rightwards is clear&#xD;
		case 'R':&#xD;
			if (!this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY - cellDim + offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY + cellDim - offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY)) {&#xD;
				this.direction = direction;&#xD;
				this.currentImg = this.rightImg.getImage();&#xD;
			}&#xD;
			break;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxc6UEOzEeyj8q1of7NKLw" name="move" specification="_MkQL0EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxc6UUOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>int offset = 0;&#xD;
		if(this instanceof Player) {&#xD;
			this.changeDirection();&#xD;
			&#xD;
			//updates the player's state on every 15th move of the player&#xD;
			if(k > 15) {&#xD;
				&#xD;
				if(Player.getGameState() == PlayerState.DOTS) {&#xD;
										&#xD;
					Player.updateGameState(PlayerState.NORMAL);&#xD;
				}&#xD;
				&#xD;
				if(Player.getGameState() == PlayerState.FRIGHT_DOTS) {&#xD;
					&#xD;
					Player.updateGameState(PlayerState.FRIGHT);&#xD;
				}&#xD;
				k = 0;&#xD;
			}&#xD;
			else {&#xD;
				&#xD;
				k++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
&#xD;
		switch (direction) {&#xD;
		case ' ':&#xD;
			break;&#xD;
&#xD;
		case 'U':&#xD;
			if (!this.checkWalls(this.pozX - cellDim + offset, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim - offset, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim / 2, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim / 2, this.pozY - cellDim - (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX, this.pozY - cellDim - (cellDim / 8 + cellOffset)))&#xD;
				{&#xD;
				this.pozY -= (cellDim / 8 + cellOffset);&#xD;
				//System.out.println(cellDim + &quot;&quot;);&#xD;
				}&#xD;
			if(this instanceof Player) {&#xD;
				this.checkSmallPellet(this.pozX, this.pozY);&#xD;
				this.checkBigPellet(this.pozX, this.pozY);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case 'D':&#xD;
			if (!this.checkWalls(this.pozX - cellDim + offset, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim - offset, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim / 2, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim / 2, this.pozY + cellDim + (cellDim / 8 + cellOffset))&#xD;
					&amp;&amp; !this.checkWalls(this.pozX, this.pozY + cellDim + (cellDim / 8 + cellOffset)))&#xD;
				{&#xD;
				this.pozY += (cellDim / 8 + cellOffset);&#xD;
				//System.out.println(cellDim + &quot;&quot;);&#xD;
				}&#xD;
			if(this instanceof Player) {			//if the entity being moved is the player it checks to see&#xD;
				this.checkSmallPellet(this.pozX, this.pozY);	// whether the player can eat any collectible &#xD;
				this.checkBigPellet(this.pozX, this.pozY);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case 'L':&#xD;
			if (!this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY - cellDim + offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY + cellDim - offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX - cellDim - (cellDim / 8 + cellOffset), this.pozY))&#xD;
				{&#xD;
				this.pozX -= (cellDim / 8 + cellOffset);&#xD;
				//System.out.println(cellDim + &quot;&quot;);&#xD;
				}&#xD;
			&#xD;
			if (this.pozX &lt; 0 - 3 * cellDim) {					//if the player passes through the tunnel from the left side&#xD;
				this.pozX = 210 * (cellDim / 8 + cellOffset);		// teleport it to the right side of the maze&#xD;
			}&#xD;
			&#xD;
			if(this instanceof Player) {&#xD;
				this.checkSmallPellet(this.pozX, this.pozY);&#xD;
				this.checkBigPellet(this.pozX, this.pozY);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case 'R':&#xD;
			if (!this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY - cellDim + offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY + cellDim - offset)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY - cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY + cellDim / 2)&#xD;
					&amp;&amp; !this.checkWalls(this.pozX + cellDim + (cellDim / 8 + cellOffset), this.pozY))&#xD;
				{&#xD;
				this.pozX += (cellDim / 8 + cellOffset);&#xD;
				//System.out.println(cellDim + &quot;&quot;);&#xD;
				}&#xD;
			&#xD;
			if (this.pozX > 31 * cellDim) {							//if the player passes through the tunnel from the right side&#xD;
				this.pozX = 0 - 27 * (cellDim / 8 + cellOffset);		// teleport it to the left side of the maze&#xD;
			}&#xD;
			if(this instanceof Player) {&#xD;
				this.checkSmallPellet(this.pozX, this.pozY);&#xD;
				this.checkBigPellet(this.pozX, this.pozY);&#xD;
			}&#xD;
			break;&#xD;
		}&#xD;
&#xD;
		 //System.out.println(this.pozX + &quot; &quot; + this.pozY);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxdhYEOzEeyj8q1of7NKLw" name="checkWalls" specification="_MkRZ8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxdhYUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxdhYkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxdhY0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for (int i = 0; i &lt; wallArray.length; i++) {&#xD;
			int[] wallCoords = wallArray[i].getWallCoordinates();&#xD;
			&#xD;
			if(i == 54 &amp;&amp; ((this instanceof Pinky &amp;&amp; eatenGhosts[0])  ||(this instanceof Inky &amp;&amp; eatenGhosts[1]) &#xD;
					|| (this instanceof Clyde &amp;&amp; eatenGhosts[3]))) {&#xD;
				return false;				&#xD;
			}&#xD;
			else {&#xD;
				if (x >= wallCoords[0] &amp;&amp; x &lt;= wallCoords[1] &amp;&amp; y >= wallCoords[2] &amp;&amp; y &lt;= wallCoords[3]) {&#xD;
					 //System.out.println(&quot;True: &quot; + x + &quot; &quot; + y);&#xD;
					return true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// System.out.println(&quot;False: &quot; + x + &quot; &quot; + y);&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxdhZEOzEeyj8q1of7NKLw" name="checkSmallPellet" specification="_MkSBAEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxdhZUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxdhZkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for (Collectable i : smallPelets) {&#xD;
			if (Player.getPelletCount() > 0 &amp;&amp; i.getVisibilityStatus()) {&#xD;
				int pelletX = i.getX();&#xD;
				int pelletY = i.getY();&#xD;
				if (pelletX >= x - cellDim / 2 &amp;&amp; pelletY >= y - cellDim / 2 &amp;&amp; pelletX &lt;= x + cellDim / 2&#xD;
						&amp;&amp; pelletY &lt;= y + cellDim / 2) {&#xD;
					i.setVisibilityStatus(false);&#xD;
					Player.updatePelletCount(-1);&#xD;
					Player.updateCurrentPoints(10);&#xD;
&#xD;
					if(!Pinky.inSpawn() || Pinky.isDisabled()) {&#xD;
						&#xD;
						if(Inky.inSpawn() &amp;&amp; !Inky.isDisabled()) {&#xD;
							Inky.incrementCounter();&#xD;
						}&#xD;
						else {&#xD;
							if(Clyde.inSpawn()) {&#xD;
								Clyde.incrementCounter();&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					if(Player.getGameState() == PlayerState.NORMAL) {&#xD;
						&#xD;
						Player.updateGameState(PlayerState.DOTS);&#xD;
					}&#xD;
					&#xD;
					if(Player.getGameState() == PlayerState.FRIGHT) {&#xD;
						&#xD;
						Player.updateGameState(PlayerState.FRIGHT_DOTS);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxdhZ0OzEeyj8q1of7NKLw" name="checkBigPellet" specification="_MkTPIEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxdhaEOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxdhaUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for (Collectable i : bigPelets) {&#xD;
			if (Player.getPelletCount() > 0 &amp;&amp; i.getVisibilityStatus()) {&#xD;
				int pelletX = i.getX();&#xD;
				int pelletY = i.getY();&#xD;
				if (pelletX >= x - cellDim / 2 &amp;&amp; pelletY >= y - cellDim / 2 &amp;&amp; pelletX &lt;= x + cellDim / 2&#xD;
						&amp;&amp; pelletY &lt;= y + cellDim / 2) {&#xD;
					Ghost.updatePointsMultiplier(1);&#xD;
					i.setVisibilityStatus(false);&#xD;
					frightened = true;&#xD;
					Player.updatePelletCount(-1);&#xD;
					Player.updateCurrentPoints(50);&#xD;
					Player.updateGameState(PlayerState.FRIGHT);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxdhakOzEeyj8q1of7NKLw" name="getPozitionX" specification="_MkT2MEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxdha0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.pozX;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxeIcEOzEeyj8q1of7NKLw" name="getPozitionY" specification="_MkUdQUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxeIcUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.pozY;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxevgEOzEeyj8q1of7NKLw" name="getCurrentImage" specification="_MkVrYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxevgUOzEeyj8q1of7NKLw" type="_MuY_QUOzEeyj8q1of7NKLw" direction="return"/>
          <language>java</language>
          <body>return this.currentImg;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxevgkOzEeyj8q1of7NKLw" name="getPlayerDirection" specification="_MkWScEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxevg0OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.direction;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxevhEOzEeyj8q1of7NKLw" name="setDirection" specification="_MkW5gEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxevhUOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>this.direction = direction;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxevhkOzEeyj8q1of7NKLw" name="setPlayerNextDirection" specification="_MkXgkEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxevh0OzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>this.nextDirection = direction;&#xD;
		//System.out.println(&quot;Direction set to &quot; + direction);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxeviEOzEeyj8q1of7NKLw" name="getPelletsArray" specification="_MkYHoEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxeviUOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxfWkEOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return smallPelets;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxfWkUOzEeyj8q1of7NKLw" name="getPowerupsArray" specification="_MkZVwEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxfWkkOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MxfWk0OzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return bigPelets;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxfWlEOzEeyj8q1of7NKLw" name="getFrightenedState" specification="_MkZ80EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxfWlUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return frightened;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxfWlkOzEeyj8q1of7NKLw" name="resetFrightenedState" specification="_Mkaj4UOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>frightened = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxfWl0OzEeyj8q1of7NKLw" name="setCellDim" specification="_MkbK8EOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxfWmEOzEeyj8q1of7NKLw" name="cellDimension">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxfWmUOzEeyj8q1of7NKLw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxfWmkOzEeyj8q1of7NKLw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>cellDim = cellDimension;&#xD;
		if(cellDim % 8 != 0)&#xD;
		{&#xD;
			cellOffset = 1;&#xD;
		}&#xD;
		&#xD;
		mazeWidth = width + cellDim / 4;&#xD;
		mazeHeight = height + cellDim / 4;&#xD;
		this.setPozX( 14 * cellDim  + cellDim / 4);&#xD;
		this.setPozY( 23 * cellDim + cellDim / 2 + (cellDim / 8 + cellOffset));&#xD;
		this.initWalls();&#xD;
		this.initPellets();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxf9oEOzEeyj8q1of7NKLw" name="initWalls" specification="_MkbyAEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>int verticalOffset = cellDim / 4;&#xD;
		int horizontalOffset = cellDim / 4 - cellOffset;&#xD;
		if(cellDim == 19 || cellDim == 17 || cellDim == 15) {&#xD;
			&#xD;
			horizontalOffset += cellOffset;&#xD;
		}&#xD;
&#xD;
		wallArray = new Walls[] { new Walls(0, mazeWidth, 0, cellDim / 2), // 1&#xD;
				new Walls(0, mazeWidth, mazeHeight - cellDim / 2, mazeHeight), // 2&#xD;
				new Walls(0, cellDim / 2, 0, 10 * cellDim), // 3&#xD;
				new Walls(27 * cellDim + cellDim / 2 + horizontalOffset, 28 * cellDim, 0, 10 * cellDim), // 4&#xD;
				new Walls(0, 5 * cellDim + cellDim / 2, 10 * cellDim + horizontalOffset - cellDim / 2, 10 * cellDim + verticalOffset), // 5&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, mazeWidth, 10 * cellDim + verticalOffset - cellDim / 2, 10 * cellDim + verticalOffset), // 6&#xD;
				new Walls(5 * cellDim, 5 * cellDim + cellDim / 2, 10 * cellDim + horizontalOffset - cellDim / 2, 13 * cellDim + cellDim / 2), // 7&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 23 * cellDim, 10 * cellDim + verticalOffset - cellDim / 2, 13 * cellDim + cellDim / 2), // 8&#xD;
				new Walls(0 - 10 * cellDim, 5 * cellDim + cellDim / 2, 13 * cellDim, 13 * cellDim + cellDim / 2), // 9&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, mazeWidth + 10 * cellDim, 13 * cellDim + cellDim / 2, 13 * cellDim + cellDim / 2), // 10&#xD;
				new Walls(0 - 10 * cellDim, 5 * cellDim + cellDim / 2, 16 * cellDim + verticalOffset - cellDim / 2, 16 * cellDim + verticalOffset), // 11&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, mazeWidth + 10 * cellDim, 16 * cellDim + verticalOffset - cellDim / 2, 16 * cellDim + verticalOffset), // 12&#xD;
				new Walls(5 * cellDim, 5 * cellDim + cellDim / 2, 16 * cellDim + verticalOffset - cellDim / 2, 19 * cellDim + cellDim / 2), // 13&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 23 * cellDim, 16 * cellDim + verticalOffset - cellDim / 2, 19 * cellDim + cellDim / 2), // 14&#xD;
				new Walls(0, 5 * cellDim + cellDim / 2, 19 * cellDim, 19 * cellDim + cellDim / 2), // 15&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, mazeWidth, 19 * cellDim, 19 * cellDim + cellDim / 2), // 16&#xD;
				new Walls(0, cellDim / 2, 19 * cellDim, mazeHeight), // 17&#xD;
				new Walls(27 * cellDim + cellDim / 2 + horizontalOffset, 28 * cellDim, 19 * cellDim, mazeHeight), // 18&#xD;
				new Walls(13 * cellDim + horizontalOffset + cellDim / 2, 14 * cellDim + cellDim / 2, 0, 4 * cellDim + cellDim / 2), // 19&#xD;
				new Walls(0, 2 * cellDim + cellDim / 2, 24 * cellDim + verticalOffset + cellDim / 2, 25 * cellDim + cellDim / 2), // 20&#xD;
				new Walls(25 * cellDim + cellDim / 2 + horizontalOffset, 28 * cellDim  + horizontalOffset, 24 * cellDim + verticalOffset + cellDim / 2, 25 * cellDim + cellDim / 2), // 21&#xD;
				new Walls(2 * cellDim + horizontalOffset + cellDim / 2, 5 * cellDim + cellDim / 2, 2 * cellDim + verticalOffset + cellDim / 2, 4 * cellDim + cellDim / 2), // 22&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 25 * cellDim + cellDim / 2, 2 * cellDim + verticalOffset + cellDim / 2, 4 * cellDim + cellDim / 2), // 23&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 11 * cellDim + cellDim / 2, 2 * cellDim + verticalOffset + cellDim / 2, 4 * cellDim + cellDim / 2), // 24&#xD;
				new Walls(16 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 2 * cellDim + verticalOffset + cellDim / 2, 4 * cellDim + cellDim / 2), // 25&#xD;
				new Walls(2 * cellDim + horizontalOffset + cellDim / 2, 5 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 7 * cellDim + cellDim / 2), // 26&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 25 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 7 * cellDim + cellDim / 2), // 27&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 8 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 13 * cellDim + cellDim / 2), // 28&#xD;
				new Walls(19 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 13 * cellDim + cellDim / 2), // 29&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 11 * cellDim + cellDim / 2, 10 * cellDim + verticalOffset - cellDim / 2, 11 * cellDim - cellDim / 2), // 30&#xD;
				new Walls(16 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 10 * cellDim + verticalOffset - cellDim / 2, 11 * cellDim - cellDim / 2), // 31&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 17 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 7 * cellDim + cellDim / 2), // 32&#xD;
				new Walls(13 * cellDim + horizontalOffset + cellDim / 2, 14 * cellDim + cellDim / 2, 6 * cellDim + verticalOffset + cellDim / 2, 10 * cellDim + cellDim / 2), // 33&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 8 * cellDim + cellDim / 2, 16 * cellDim + verticalOffset - cellDim / 2, 19 * cellDim + cellDim / 2), // 34&#xD;
				new Walls(19 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 16 * cellDim + verticalOffset - cellDim / 2, 19 * cellDim + cellDim / 2), // 35&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 17 * cellDim + cellDim / 2, 18 * cellDim + verticalOffset + cellDim / 2, 19 * cellDim + cellDim / 2), // 36&#xD;
				new Walls(13 * cellDim + horizontalOffset + cellDim / 2, 14 * cellDim + cellDim / 2, 18 * cellDim + verticalOffset + cellDim / 2, 22 * cellDim + cellDim / 2), // 37&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 11 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 22 * cellDim + cellDim / 2), // 38&#xD;
				new Walls(16 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 22 * cellDim + cellDim / 2), // 39&#xD;
				new Walls(2 * cellDim + horizontalOffset + cellDim / 2, 5 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 22 * cellDim + cellDim / 2), // 40&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 25 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 22 * cellDim + cellDim / 2), // 41&#xD;
				new Walls(4 * cellDim + horizontalOffset + cellDim / 2, 5 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 25 * cellDim + cellDim / 2), // 42&#xD;
				new Walls(22 * cellDim + cellDim / 2 + horizontalOffset, 23 * cellDim + cellDim / 2, 21 * cellDim + verticalOffset + cellDim / 2, 25 * cellDim + cellDim / 2), // 43&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 17 * cellDim + cellDim / 2, 24 * cellDim + verticalOffset + cellDim / 2, 25 * cellDim + cellDim / 2), // 44&#xD;
				new Walls(13 * cellDim + horizontalOffset + cellDim / 2, 14 * cellDim + cellDim / 2, 24 * cellDim + verticalOffset + cellDim / 2, 28 * cellDim + cellDim / 2), // 45&#xD;
				new Walls(2 * cellDim + horizontalOffset + cellDim / 2, 11 * cellDim + cellDim / 2, 27 * cellDim + verticalOffset + cellDim / 2, 28 * cellDim + cellDim / 2), // 46&#xD;
				new Walls(16 * cellDim + horizontalOffset + cellDim / 2, 25 * cellDim + cellDim / 2, 27 * cellDim + verticalOffset + cellDim / 2, 28 * cellDim + cellDim / 2), // 47&#xD;
				new Walls(7 * cellDim + horizontalOffset + cellDim / 2, 8 * cellDim + cellDim / 2, 24 * cellDim + verticalOffset + cellDim / 2, 28 * cellDim + cellDim / 2), // 48&#xD;
				new Walls(19 * cellDim + horizontalOffset + cellDim / 2, 20 * cellDim + cellDim / 2, 24 * cellDim + verticalOffset + cellDim / 2, 28 * cellDim + cellDim / 2), // 49&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 17 * cellDim + cellDim / 2, 16 * cellDim + verticalOffset, 16 * cellDim + cellDim / 2), // 50 - zona fantome&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 11 * cellDim, 12 * cellDim + verticalOffset + cellDim / 2, 16 * cellDim + cellDim / 2), // 51 - zona fantome&#xD;
				new Walls(17 * cellDim + horizontalOffset, 17 * cellDim + cellDim / 2, 12 * cellDim + verticalOffset + cellDim / 2, 16 * cellDim + cellDim / 2), // 52 - zona fantome&#xD;
				new Walls(10 * cellDim + horizontalOffset + cellDim / 2, 13 * cellDim, 12 * cellDim + verticalOffset + cellDim / 2, 13 * cellDim), 				// 53 - zona fantome&#xD;
				new Walls(15 * cellDim + horizontalOffset, 17 * cellDim + cellDim / 2, 12 * cellDim + verticalOffset + cellDim / 2, 13 * cellDim), 				// 54 - zona fantome&#xD;
				new Walls(13 * cellDim, 15 * cellDim, 12 * cellDim + verticalOffset + cellDim / 2, 13 * cellDim), 												// 55 - poarta fantome&#xD;
&#xD;
		};&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxf9oUOzEeyj8q1of7NKLw" name="initPellets" specification="_MkcZEEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>smallPelets = new Collectable[] {&#xD;
				// row 1&#xD;
				 new Collectable(cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(7 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(8 * cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						new Collectable(9 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						new Collectable(15 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(16 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(17 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(18 * cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						new Collectable(19 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(20 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(21 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(22 * cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						new Collectable(23 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(24 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(25 * cellDim + cellDim / 2, cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, cellDim + cellDim / 2),&#xD;
						// row 2&#xD;
						new Collectable(cellDim + cellDim / 2, 2 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 2 * cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 2 * cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 2 * cellDim + cellDim / 2),&#xD;
						new Collectable(21* cellDim + cellDim / 2, 2 * cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 2 * cellDim + cellDim / 2),&#xD;
						// row 3&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 3 * cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 3 * cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 3 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 3 * cellDim + cellDim / 2),&#xD;
						// row 4&#xD;
						new Collectable(cellDim + cellDim / 2, 4 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 4 * cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 4 * cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 4 * cellDim + cellDim / 2),&#xD;
						new Collectable(21 * cellDim + cellDim / 2, 4 * cellDim + cellDim / 2), new Collectable(26 * cellDim + cellDim / 2, 4 * cellDim + cellDim / 2),&#xD;
						// row 5&#xD;
						new Collectable(cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(7 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(8 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(26 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(12 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(13 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(14 * cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(15* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(16* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(17* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(18* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(19* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(20* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(22* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(23* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						new Collectable(24* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 5 * cellDim + cellDim / 2),&#xD;
						// row 6&#xD;
						new Collectable(cellDim + cellDim / 2, 6 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 6 * cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 6 * cellDim + cellDim / 2), new Collectable(18 * cellDim + cellDim / 2, 6 * cellDim + cellDim / 2),&#xD;
						new Collectable(21 * cellDim + cellDim / 2, 6 * cellDim + cellDim / 2), new Collectable(26 * cellDim + cellDim / 2, 6 * cellDim + cellDim / 2),&#xD;
						// row 7&#xD;
						new Collectable(cellDim + cellDim / 2, 7 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 7 * cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 7 * cellDim + cellDim / 2), new Collectable(18 * cellDim + cellDim / 2, 7 * cellDim + cellDim / 2),&#xD;
						new Collectable(21 * cellDim + cellDim / 2, 7 * cellDim + cellDim / 2), new Collectable(26 * cellDim + cellDim / 2, 7 * cellDim + cellDim / 2),&#xD;
						// row 8&#xD;
						new Collectable(cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2),&#xD;
						new Collectable(10 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(18 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(15* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2),&#xD;
						new Collectable(16* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(17* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(26 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2),&#xD;
						new Collectable(22* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(23* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(24 * cellDim + cellDim / 2, 8 * cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 8 * cellDim + cellDim / 2),&#xD;
						// row 9&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 9 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 9 * cellDim + cellDim / 2),&#xD;
						// row 10&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 10 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 10 * cellDim + cellDim / 2),&#xD;
						// row 11&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 11 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 11 * cellDim + cellDim / 2),&#xD;
						// row 12&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 12 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 12 * cellDim + cellDim / 2),&#xD;
						// row 13&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 13 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 13 * cellDim + cellDim / 2),&#xD;
						// row 14&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 14 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 14 * cellDim + cellDim / 2),&#xD;
						// row 15&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 15 * cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 15 * cellDim + cellDim / 2),&#xD;
						// row 16&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 16* cellDim + cellDim / 2), new Collectable(21 * cellDim + cellDim / 2, 16* cellDim + cellDim / 2),&#xD;
						// row 17&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 17* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 17* cellDim + cellDim / 2),&#xD;
						// row 18&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 18* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 18* cellDim + cellDim / 2),&#xD;
						// row 19&#xD;
						new Collectable(6 * cellDim + cellDim / 2, 19* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 19* cellDim + cellDim / 2),&#xD;
						// row 20&#xD;
						new Collectable(cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(7 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(8 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
						new Collectable(9 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
						new Collectable(26 * cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(19* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(16* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(17* cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
						new Collectable(18* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(20* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(15* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
						new Collectable(22* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(23* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(24* cellDim + cellDim / 2, 20* cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 20* cellDim + cellDim / 2),&#xD;
&#xD;
						// row 21&#xD;
						new Collectable(cellDim + cellDim / 2, 21* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 21* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 21* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 21* cellDim + cellDim / 2),&#xD;
						new Collectable(21* cellDim + cellDim / 2, 21* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 21* cellDim + cellDim / 2),&#xD;
						// row 22&#xD;
						new Collectable(cellDim + cellDim / 2, 22* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 22* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 22* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 22* cellDim + cellDim / 2),&#xD;
						new Collectable(21* cellDim + cellDim / 2, 22* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 22* cellDim + cellDim / 2),&#xD;
						// row 23&#xD;
						new Collectable(2 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(7 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2),&#xD;
						new Collectable(8 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2),&#xD;
						new Collectable(12 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(16* cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(17* cellDim + cellDim / 2, 23* cellDim + cellDim / 2),&#xD;
						new Collectable(18* cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(19* cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(20* cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 23* cellDim + cellDim / 2),&#xD;
						new Collectable(24* cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 23* cellDim + cellDim / 2),&#xD;
						// row 24&#xD;
						new Collectable(3 * cellDim + cellDim / 2, 24* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 24* cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 24* cellDim + cellDim / 2), new Collectable(18* cellDim + cellDim / 2, 24* cellDim + cellDim / 2),&#xD;
						new Collectable(21* cellDim + cellDim / 2, 24* cellDim + cellDim / 2), new Collectable(24* cellDim + cellDim / 2, 24* cellDim + cellDim / 2),&#xD;
						// row 25&#xD;
						new Collectable(3 * cellDim + cellDim / 2, 25* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 25* cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 25* cellDim + cellDim / 2), new Collectable(18* cellDim + cellDim / 2, 25* cellDim + cellDim / 2),&#xD;
						new Collectable(21* cellDim + cellDim / 2, 25* cellDim + cellDim / 2), new Collectable(24* cellDim + cellDim / 2, 25* cellDim + cellDim / 2),&#xD;
						// row 26&#xD;
						new Collectable(cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2),&#xD;
						new Collectable(11 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(16* cellDim + cellDim / 2, 26* cellDim + cellDim / 2),&#xD;
						new Collectable(17* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(18* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(22* cellDim + cellDim / 2, 26* cellDim + cellDim / 2),&#xD;
						new Collectable(23* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(24* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 26* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 26* cellDim + cellDim / 2),&#xD;
						// row 27&#xD;
						new Collectable(cellDim + cellDim / 2, 27* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 27* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 27* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 27* cellDim + cellDim / 2),&#xD;
						// row 28&#xD;
						new Collectable(cellDim + cellDim / 2, 28* cellDim + cellDim / 2), new Collectable(12 * cellDim + cellDim / 2, 28* cellDim + cellDim / 2), new Collectable(15 * cellDim + cellDim / 2, 28* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 28* cellDim + cellDim / 2),&#xD;
						// row 29&#xD;
						new Collectable(cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(2 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(3 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(4 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(5 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(6 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(7 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(26 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(8 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(9 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(10 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(11 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(12 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(13 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(14 * cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(15* cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(16* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(17* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(18* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(19* cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(20* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(21* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(22* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(23* cellDim + cellDim / 2, 29* cellDim + cellDim / 2),&#xD;
						new Collectable(24* cellDim + cellDim / 2, 29* cellDim + cellDim / 2), new Collectable(25* cellDim + cellDim / 2, 29* cellDim + cellDim / 2) };&#xD;
		&#xD;
		bigPelets = new Collectable[] { new Collectable(cellDim + cellDim / 2, 3 * cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 3* cellDim + cellDim / 2),&#xD;
				new Collectable(cellDim + cellDim / 2, 23* cellDim + cellDim / 2), new Collectable(26* cellDim + cellDim / 2, 23* cellDim + cellDim / 2) };&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxf9okOzEeyj8q1of7NKLw" name="setPozX" specification="_MkdAIEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxf9o0OzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.pozX = x;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxf9pEOzEeyj8q1of7NKLw" name="setPozY" specification="_MkdnMEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxf9pUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.pozY = y;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mxf9pkOzEeyj8q1of7NKLw" name="setCurrentImage" specification="_MunBsEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mxf9p0OzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mxf9qEOzEeyj8q1of7NKLw" name="state" type="_Mi3EsEOzEeyj8q1of7NKLw"/>
          <language>java</language>
          <body>if(state != GhostState.EATEN) {&#xD;
			switch (direction) {&#xD;
			&#xD;
			case 'U' :&#xD;
				this.currentImg = this.upImg.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'D' :&#xD;
				this.currentImg = this.downImg.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'L' :&#xD;
				this.currentImg = this.leftImg.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'R' :&#xD;
				this.currentImg = this.rightImg.getImage();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			switch (direction) {&#xD;
			&#xD;
			case 'U' :&#xD;
				this.currentImg = eyesUp.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'D' :&#xD;
				this.currentImg = eyesDown.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'L' :&#xD;
				this.currentImg = eyesLeft.getImage();&#xD;
				break;&#xD;
				&#xD;
			case 'R' :&#xD;
				this.currentImg = eyesRight.getImage();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxgksEOzEeyj8q1of7NKLw" name="setGhostEaten" specification="_Mke1UEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MxgksUOzEeyj8q1of7NKLw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MxgkskOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>eatenGhosts[i] = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MkPkwEOzEeyj8q1of7NKLw" name="changeDirection" method="_MxcTQEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MkQL0EOzEeyj8q1of7NKLw" name="move" method="_Mxc6UEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkQy4EOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkRZ8EOzEeyj8q1of7NKLw" name="checkWalls" method="_MxdhYEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkRZ8UOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkRZ8kOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkRZ80OzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkSBAEOzEeyj8q1of7NKLw" name="checkSmallPellet" method="_MxdhZEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkSoEEOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkSoEUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkTPIEOzEeyj8q1of7NKLw" name="checkBigPellet" method="_MxdhZ0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkTPIUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkTPIkOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkT2MEOzEeyj8q1of7NKLw" name="getPozitionX" method="_MxdhakOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkUdQEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkUdQUOzEeyj8q1of7NKLw" name="getPozitionY" method="_MxeIcEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkVEUEOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkVrYEOzEeyj8q1of7NKLw" name="getCurrentImage" method="_MxevgEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MvSXIEOzEeyj8q1of7NKLw" type="_MuY_QUOzEeyj8q1of7NKLw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MkWScEOzEeyj8q1of7NKLw" name="getPlayerDirection" method="_MxevgkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkWScUOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkW5gEOzEeyj8q1of7NKLw" name="setDirection" method="_MxevhEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkW5gUOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkXgkEOzEeyj8q1of7NKLw" name="setPlayerNextDirection" method="_MxevhkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkXgkUOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkYHoEOzEeyj8q1of7NKLw" name="getPelletsArray" method="_MxeviEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkYHoUOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MkYHokOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkZVwEOzEeyj8q1of7NKLw" name="getPowerupsArray" method="_MxfWkUOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkZVwUOzEeyj8q1of7NKLw" type="_MidcEEOzEeyj8q1of7NKLw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MkZVwkOzEeyj8q1of7NKLw" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkZ80EOzEeyj8q1of7NKLw" name="getFrightenedState" isStatic="true" method="_MxfWlEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mkaj4EOzEeyj8q1of7NKLw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mkaj4UOzEeyj8q1of7NKLw" name="resetFrightenedState" isStatic="true" method="_MxfWlkOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MkbK8EOzEeyj8q1of7NKLw" name="setCellDim" method="_MxfWl0OzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkbK8UOzEeyj8q1of7NKLw" name="cellDimension">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkbK8kOzEeyj8q1of7NKLw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MkbK80OzEeyj8q1of7NKLw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkbyAEOzEeyj8q1of7NKLw" name="initWalls" visibility="private" method="_Mxf9oEOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MkcZEEOzEeyj8q1of7NKLw" name="initPellets" visibility="private" method="_Mxf9oUOzEeyj8q1of7NKLw"/>
        <ownedOperation xmi:id="_MkdAIEOzEeyj8q1of7NKLw" name="setPozX" method="_Mxf9okOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkdAIUOzEeyj8q1of7NKLw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MkdnMEOzEeyj8q1of7NKLw" name="setPozY" method="_Mxf9pEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MkdnMUOzEeyj8q1of7NKLw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Mke1UEOzEeyj8q1of7NKLw" name="setGhostEaten" isStatic="true" method="_MxgksEOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_Mke1UUOzEeyj8q1of7NKLw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Mke1UkOzEeyj8q1of7NKLw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MunBsEOzEeyj8q1of7NKLw" name="setCurrentImage" method="_Mxf9pkOzEeyj8q1of7NKLw">
          <ownedParameter xmi:id="_MunowEOzEeyj8q1of7NKLw" name="direction">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MunowUOzEeyj8q1of7NKLw" name="state" type="_Mi3EsEOzEeyj8q1of7NKLw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyGakUOzEeyj8q1of7NKLw" name="" memberEnd="_MyGakkOzEeyj8q1of7NKLw _MwFoYEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyGakkOzEeyj8q1of7NKLw" name="" type="_MjEgEEOzEeyj8q1of7NKLw" association="_MyGakUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyHosUOzEeyj8q1of7NKLw" name="" memberEnd="_MyHoskOzEeyj8q1of7NKLw _MwQAcEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyHoskOzEeyj8q1of7NKLw" name="" type="_Mj4YYEOzEeyj8q1of7NKLw" association="_MyHosUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyIPwUOzEeyj8q1of7NKLw" name="" memberEnd="_MyIPwkOzEeyj8q1of7NKLw _MwYjUEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyIPwkOzEeyj8q1of7NKLw" name="" type="_Mj4YYEOzEeyj8q1of7NKLw" association="_MyIPwUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyI20UOzEeyj8q1of7NKLw" name="" memberEnd="_MyI20kOzEeyj8q1of7NKLw _MwZKYEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyI20kOzEeyj8q1of7NKLw" name="" type="_Mj4YYEOzEeyj8q1of7NKLw" association="_MyI20UOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyJd4UOzEeyj8q1of7NKLw" name="" memberEnd="_MyJd4kOzEeyj8q1of7NKLw _MwiUUUOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyJd4kOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyJd4UOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyKE8UOzEeyj8q1of7NKLw" name="" memberEnd="_MyKE8kOzEeyj8q1of7NKLw _Mwi7YUOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyKE8kOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyKE8UOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyKsAUOzEeyj8q1of7NKLw" name="" memberEnd="_MyKsAkOzEeyj8q1of7NKLw _MwkJgUOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyKsAkOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyKsAUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyNIQEOzEeyj8q1of7NKLw" name="" memberEnd="_MyNIQUOzEeyj8q1of7NKLw _MwkwkkOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyNIQUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyNIQEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyNvUUOzEeyj8q1of7NKLw" name="" memberEnd="_MyOWYEOzEeyj8q1of7NKLw _Mwl-sEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyOWYEOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyNvUUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyPkgEOzEeyj8q1of7NKLw" name="" memberEnd="_MyPkgUOzEeyj8q1of7NKLw _MwnM0EOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyPkgUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyPkgEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyQyoUOzEeyj8q1of7NKLw" name="" memberEnd="_MyQyokOzEeyj8q1of7NKLw _Mwoa8EOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyQyokOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyQyoUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MySAwUOzEeyj8q1of7NKLw" name="" memberEnd="_MySAwkOzEeyj8q1of7NKLw _MwppEEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MySAwkOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MySAwUOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyTO4UOzEeyj8q1of7NKLw" name="" memberEnd="_MyTO4kOzEeyj8q1of7NKLw _Mwq3MEOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyTO4kOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyTO4UOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyUdAEOzEeyj8q1of7NKLw" name="" memberEnd="_MyUdAUOzEeyj8q1of7NKLw _MwreQUOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyUdAUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyUdAEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyVEEEOzEeyj8q1of7NKLw" name="" memberEnd="_MyVEEUOzEeyj8q1of7NKLw _MwsFUkOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyVEEUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyVEEEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyVrIEOzEeyj8q1of7NKLw" name="" memberEnd="_MyVrIUOzEeyj8q1of7NKLw _MwssYkOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyVrIUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyVrIEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MyWSMEOzEeyj8q1of7NKLw" name="" memberEnd="_MyWSMUOzEeyj8q1of7NKLw _MwtTckOzEeyj8q1of7NKLw">
        <ownedEnd xmi:id="_MyWSMUOzEeyj8q1of7NKLw" name="" type="_MkKFMEOzEeyj8q1of7NKLw" association="_MyWSMEOzEeyj8q1of7NKLw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Me1gUEOzEeyj8q1of7NKLw" name="View">
      <packagedElement xmi:type="uml:Class" xmi:id="_Mi1PgEOzEeyj8q1of7NKLw" name="PacManView">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MxNpwEOzEeyj8q1of7NKLw" name="updateLivesDisplay" specification="_Mi2doEOzEeyj8q1of7NKLw">
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Mi2doEOzEeyj8q1of7NKLw" name="updateLivesDisplay" isStatic="true" method="_MxNpwEOzEeyj8q1of7NKLw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Mj18IEOzEeyj8q1of7NKLw" name="MazePanel"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_MfgOsEOzEeyj8q1of7NKLw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_MfgOsUOzEeyj8q1of7NKLw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_MuH5gEOzEeyj8q1of7NKLw" name="ImageIcon"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Mf7sgEOzEeyj8q1of7NKLw" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_MubbgEOzEeyj8q1of7NKLw" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_LbzWAEOzEeyj8q1of7NKLw">
      <eAnnotations xmi:id="_Lb41kEOzEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_p0CIoEPHEeyj8q1of7NKLw">
      <eAnnotations xmi:id="_p0DWwEPHEeyj8q1of7NKLw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://ARCHITECTUREREVIEW_PROFILES/ArchitectureReview.profile.uml#_ypx9siN3EeK_4-5pMoCxQg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://ARCHITECTUREREVIEW_PROFILES/ArchitectureReview.profile.uml#_qTOicCN3EeK_4-5pMoCxQg"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Lb9uEEOzEeyj8q1of7NKLw" base_Package="_Kd148EOzEeyj8q1of7NKLw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_MiR14UOzEeyj8q1of7NKLw" base_Element="_MiRO0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MjCD0EOzEeyj8q1of7NKLw" base_Element="_MjA1sEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MkYusEOzEeyj8q1of7NKLw" base_Element="_MkYHoEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MkZVw0OzEeyj8q1of7NKLw" base_Element="_MkZVwEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtUoQEOzEeyj8q1of7NKLw" base_Element="_MtSMAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtY5sEOzEeyj8q1of7NKLw" base_Element="_MtXEgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mtau4EOzEeyj8q1of7NKLw" base_Element="_MtZgwEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtdLIEOzEeyj8q1of7NKLw" base_Element="_MtbV8EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtfAUEOzEeyj8q1of7NKLw" base_Element="_MtdyMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mtg1gEOzEeyj8q1of7NKLw" base_Element="_MtfAUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtiqsEOzEeyj8q1of7NKLw" base_Element="_Mtg1gUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mtkf4EOzEeyj8q1of7NKLw" base_Element="_MtiqsUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MtnjMEOzEeyj8q1of7NKLw" base_Element="_MtlG8EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mtu38EOzEeyj8q1of7NKLw" base_Element="_MttCwEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mt7sQEOzEeyj8q1of7NKLw" base_Element="_Mt5QAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mt9hcEOzEeyj8q1of7NKLw" base_Element="_Mt8TUEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MuIgkEOzEeyj8q1of7NKLw" base_Element="_MuH5gEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MuWjAEOzEeyj8q1of7NKLw" base_Element="_MuVU4EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MuXxIEOzEeyj8q1of7NKLw" base_Element="_MuWjAUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MuY_QEOzEeyj8q1of7NKLw" base_Element="_MuXxIUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MuaNYEOzEeyj8q1of7NKLw" base_Element="_MuY_QUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_Mua0cEOzEeyj8q1of7NKLw" base_Element="_MuaNYUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MucCkEOzEeyj8q1of7NKLw" base_Element="_MubbgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mu2SQEOzEeyj8q1of7NKLw" base_Element="_Mu1EIEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_Mu4ugEOzEeyj8q1of7NKLw" base_Element="_Mu1EIEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_Mu4ugUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mu6jsEOzEeyj8q1of7NKLw" base_Element="_Mu5VkEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_Mu7KwEOzEeyj8q1of7NKLw" base_Element="_Mu5VkEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_Mu7KwUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mu8_8EOzEeyj8q1of7NKLw" base_Element="_Mu7x0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_Mu9nAEOzEeyj8q1of7NKLw" base_Element="_Mu7x0EOzEeyj8q1of7NKLw">
    <annotations xmi:id="_Mu9nAUOzEeyj8q1of7NKLw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvADQEOzEeyj8q1of7NKLw" base_Element="_Mu_cMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvAqUEOzEeyj8q1of7NKLw" base_Element="_Mu_cMEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvAqUUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvB4cEOzEeyj8q1of7NKLw" base_Element="_MvBRYEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvB4cUOzEeyj8q1of7NKLw" base_Element="_MvBRYEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvB4ckOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvDGkEOzEeyj8q1of7NKLw" base_Element="_MvCfgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvDtoEOzEeyj8q1of7NKLw" base_Element="_MvCfgEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvDtoUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvE7wEOzEeyj8q1of7NKLw" base_Element="_MvEUsEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvFi0EOzEeyj8q1of7NKLw" base_Element="_MvEUsEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvFi0UOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvHYAEOzEeyj8q1of7NKLw" base_Element="_MvGw8EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvHYAUOzEeyj8q1of7NKLw" base_Element="_MvGw8EOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvHYAkOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvH_EkOzEeyj8q1of7NKLw" base_Element="_MvH_EEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvImIEOzEeyj8q1of7NKLw" base_Element="_MvH_EEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvImIUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvZr4EOzEeyj8q1of7NKLw" base_Element="_MvZE0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvaS8EOzEeyj8q1of7NKLw" base_Element="_MvZE0EOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvaS8UOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvbhEEOzEeyj8q1of7NKLw" base_Element="_Mva6AEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvcIIEOzEeyj8q1of7NKLw" base_Element="_Mva6AEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvcIIUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_MvdWQEOzEeyj8q1of7NKLw" base_Property="_MvcvMEOzEeyj8q1of7NKLw" siblings="_MxkPEEOzEeyj8q1of7NKLw _MxldMEOzEeyj8q1of7NKLw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mvd9UEOzEeyj8q1of7NKLw" base_Element="_MvcvMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvfLcEOzEeyj8q1of7NKLw" base_Element="_MvcvMEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvfLcUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mvi10EOzEeyj8q1of7NKLw" base_Element="_MvhnsEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvkD8EOzEeyj8q1of7NKLw" base_Element="_MvhnsEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvkrAEOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_Mvl5IEOzEeyj8q1of7NKLw" base_Property="_MvlSEEOzEeyj8q1of7NKLw" siblings="_MxmrUEOzEeyj8q1of7NKLw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mvl5IUOzEeyj8q1of7NKLw" base_Element="_MvlSEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_MvmgMEOzEeyj8q1of7NKLw" base_Element="_MvlSEEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_MvmgMUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvoVYEOzEeyj8q1of7NKLw" base_Element="_MvnHQEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Annotations xmi:id="_Mvo8cEOzEeyj8q1of7NKLw" base_Element="_MvnHQEOzEeyj8q1of7NKLw">
    <annotations xmi:id="_Mvo8cUOzEeyj8q1of7NKLw" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_MvqKkUOzEeyj8q1of7NKLw" dimensions="1" base_Element="_MvpjgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvqxoUOzEeyj8q1of7NKLw" base_Element="_MvpjgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mvr_wEOzEeyj8q1of7NKLw" base_Element="_MvrYsEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvtN4EOzEeyj8q1of7NKLw" base_Element="_Mvr_wUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvucAEOzEeyj8q1of7NKLw" base_Element="_MvtN4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvvDEEOzEeyj8q1of7NKLw" base_Element="_MvucAUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvwRMEOzEeyj8q1of7NKLw" base_Element="_MvvqIEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mvz7kEOzEeyj8q1of7NKLw" base_Element="_MvyGYEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv2-4EOzEeyj8q1of7NKLw" base_Element="_Mv2X0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_Mv4NAkOzEeyj8q1of7NKLw" dimensions="1" base_Element="_Mv4NAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv4NBEOzEeyj8q1of7NKLw" base_Element="_Mv4NAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv6pQEOzEeyj8q1of7NKLw" base_Element="_Mv6CMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv7QUEOzEeyj8q1of7NKLw" base_Element="_Mv6pQUOzEeyj8q1of7NKLw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Mv8ecEOzEeyj8q1of7NKLw" name="getGamePaused" method="_MxPe8EOzEeyj8q1of7NKLw">
      <ownedParameter xmi:id="_Mv-ToEOzEeyj8q1of7NKLw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_Mv8ecUOzEeyj8q1of7NKLw" name="setGamePaused" method="_MxPe8kOzEeyj8q1of7NKLw">
      <ownedParameter xmi:id="_Mv8eckOzEeyj8q1of7NKLw" name="paused">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv_hwEOzEeyj8q1of7NKLw" base_Element="_Mv-6sEOzEeyj8q1of7NKLw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_MwAI0EOzEeyj8q1of7NKLw" name="getPelletCount" isStatic="true" method="_MxQGAEOzEeyj8q1of7NKLw">
      <ownedParameter xmi:id="_MwAv4EOzEeyj8q1of7NKLw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwBW8EOzEeyj8q1of7NKLw" base_Element="_MwAv4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwB-AUOzEeyj8q1of7NKLw" base_Element="_MwB-AEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwClEUOzEeyj8q1of7NKLw" base_Element="_MwClEEOzEeyj8q1of7NKLw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_MwDMIEOzEeyj8q1of7NKLw" name="getMovementSpeed" isStatic="true" method="_MxQGAkOzEeyj8q1of7NKLw">
      <ownedParameter xmi:id="_MwEaQEOzEeyj8q1of7NKLw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_MwDzMEOzEeyj8q1of7NKLw" name="setMovementSpeed" isStatic="true" method="_MxQGBEOzEeyj8q1of7NKLw">
      <ownedParameter xmi:id="_MwDzMUOzEeyj8q1of7NKLw" name="speed">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwFBUEOzEeyj8q1of7NKLw" base_Element="_MwEaQUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwGPcEOzEeyj8q1of7NKLw" base_Element="_MwFoYEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwHdkEOzEeyj8q1of7NKLw" base_Element="_MwG2gEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwIEoUOzEeyj8q1of7NKLw" base_Element="_MwHdkUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwIrsUOzEeyj8q1of7NKLw" base_Element="_MwIEokOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwJSwUOzEeyj8q1of7NKLw" base_Element="_MwIrskOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwKg4EOzEeyj8q1of7NKLw" base_Element="_MwJSwkOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwLH8EOzEeyj8q1of7NKLw" base_Element="_MwKg4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwMWEEOzEeyj8q1of7NKLw" base_Element="_MwLvAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwM9IEOzEeyj8q1of7NKLw" base_Element="_MwMWEUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwM9I0OzEeyj8q1of7NKLw" base_Element="_MwM9IUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwOLQEOzEeyj8q1of7NKLw" base_Element="_MwNkMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwOyUEOzEeyj8q1of7NKLw" base_Element="_MwOLQUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwPZYEOzEeyj8q1of7NKLw" base_Element="_MwOyUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwQAcUOzEeyj8q1of7NKLw" base_Element="_MwQAcEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwTDwEOzEeyj8q1of7NKLw" base_Element="_MwROkEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwUR4EOzEeyj8q1of7NKLw" base_Element="_MwTq0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwVgAEOzEeyj8q1of7NKLw" base_Element="_MwU48EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwWuIEOzEeyj8q1of7NKLw" base_Element="_MwWHEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwXVMUOzEeyj8q1of7NKLw" base_Element="_MwWuIUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwX8QUOzEeyj8q1of7NKLw" base_Element="_MwX8QEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwYjUkOzEeyj8q1of7NKLw" base_Element="_MwYjUEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwZKYkOzEeyj8q1of7NKLw" base_Element="_MwZKYEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwaYgUOzEeyj8q1of7NKLw" base_Element="_MwaYgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwbmoEOzEeyj8q1of7NKLw" base_Element="_Mwa_kEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwbmokOzEeyj8q1of7NKLw" base_Element="_MwbmoUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwdb0EOzEeyj8q1of7NKLw" base_Element="_Mwc0wEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MweC4EOzEeyj8q1of7NKLw" base_Element="_Mwdb0UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwep8EOzEeyj8q1of7NKLw" base_Element="_MweC4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwf4EEOzEeyj8q1of7NKLw" base_Element="_MwfRAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwgfI0OzEeyj8q1of7NKLw" base_Element="_MwgfIUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwhGMkOzEeyj8q1of7NKLw" base_Element="_MwhGMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MwhtQkOzEeyj8q1of7NKLw" base_Element="_MwhtQEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwiUUEOzEeyj8q1of7NKLw" base_Element="_MwhtQEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MwiUU0OzEeyj8q1of7NKLw" base_Element="_MwiUUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwi7YEOzEeyj8q1of7NKLw" base_Element="_MwiUUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MwjicUOzEeyj8q1of7NKLw" base_Element="_Mwi7YUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwkJgEOzEeyj8q1of7NKLw" base_Element="_Mwi7YUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Array xmi:id="_MwkwkEOzEeyj8q1of7NKLw" base_Element="_MwkJgUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwkwkUOzEeyj8q1of7NKLw" base_Element="_MwkJgUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwlXoEOzEeyj8q1of7NKLw" base_Element="_MwkwkkOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwmlwEOzEeyj8q1of7NKLw" base_Element="_Mwl-sEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwnz4EOzEeyj8q1of7NKLw" base_Element="_MwnM0EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwpCAEOzEeyj8q1of7NKLw" base_Element="_Mwoa8EOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwqQIEOzEeyj8q1of7NKLw" base_Element="_MwppEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwreQEOzEeyj8q1of7NKLw" base_Element="_Mwq3MEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwsFUUOzEeyj8q1of7NKLw" base_Element="_MwreQUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwssYUOzEeyj8q1of7NKLw" base_Element="_MwsFUkOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwtTcUOzEeyj8q1of7NKLw" base_Element="_MwssYkOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mwt6gEOzEeyj8q1of7NKLw" base_Element="_MwtTckOzEeyj8q1of7NKLw"/>
  <uml:OpaqueBehavior xmi:id="_MxNCsEOzEeyj8q1of7NKLw" name="GameSpeeds" specification="_MiwXAEOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxNCsUOzEeyj8q1of7NKLw" name="value">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <ownedParameter xmi:id="_MxNCskOzEeyj8q1of7NKLw" type="_MikJwEOzEeyj8q1of7NKLw" direction="return"/>
    <language>java</language>
    <body>this.value = value;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_MxPe8EOzEeyj8q1of7NKLw" name="getGamePaused" specification="_Mv8ecEOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxPe8UOzEeyj8q1of7NKLw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.gamePaused;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_MxPe8kOzEeyj8q1of7NKLw" name="setGamePaused" specification="_Mv8ecUOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxPe80OzEeyj8q1of7NKLw" name="paused">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>this.gamePaused = paused;&#xD;
		if(paused == true) {&#xD;
			this.currentImg = pausedImg.getImage();&#xD;
		}&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_MxQGAEOzEeyj8q1of7NKLw" name="getPelletCount" specification="_MwAI0EOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxQGAUOzEeyj8q1of7NKLw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return pelletCount;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_MxQGAkOzEeyj8q1of7NKLw" name="getMovementSpeed" specification="_MwDMIEOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxQGA0OzEeyj8q1of7NKLw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return movementSpeed;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_MxQGBEOzEeyj8q1of7NKLw" name="setMovementSpeed" specification="_MwDzMEOzEeyj8q1of7NKLw">
    <ownedParameter xmi:id="_MxQGBUOzEeyj8q1of7NKLw" name="speed">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>movementSpeed = speed;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_Mxk2IEOzEeyj8q1of7NKLw" base_Property="_MxkPEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mxk2IUOzEeyj8q1of7NKLw" base_Element="_MxkPEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_MxldMUOzEeyj8q1of7NKLw" base_Property="_MxldMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MxldMkOzEeyj8q1of7NKLw" base_Element="_MxldMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_MxmrUUOzEeyj8q1of7NKLw" base_Property="_MxmrUEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MxnSYEOzEeyj8q1of7NKLw" base_Element="_MxmrUEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyBiEEOzEeyj8q1of7NKLw" base_Element="_MyA7AEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyCJIEOzEeyj8q1of7NKLw" base_Element="_MyBiEUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyDXQEOzEeyj8q1of7NKLw" base_Element="_MyCwMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyElYEOzEeyj8q1of7NKLw" base_Element="_MyDXQUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyFMcEOzEeyj8q1of7NKLw" base_Element="_MyElYUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyGakEOzEeyj8q1of7NKLw" base_Element="_MyFzgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyHosEOzEeyj8q1of7NKLw" base_Element="_MyGakUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyIPwEOzEeyj8q1of7NKLw" base_Element="_MyHosUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyI20EOzEeyj8q1of7NKLw" base_Element="_MyIPwUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyJd4EOzEeyj8q1of7NKLw" base_Element="_MyI20UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyKE8EOzEeyj8q1of7NKLw" base_Element="_MyJd4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyKsAEOzEeyj8q1of7NKLw" base_Element="_MyKE8UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyMhMEOzEeyj8q1of7NKLw" base_Element="_MyKsAUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyNvUEOzEeyj8q1of7NKLw" base_Element="_MyNIQEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyO9cEOzEeyj8q1of7NKLw" base_Element="_MyNvUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyQyoEOzEeyj8q1of7NKLw" base_Element="_MyPkgEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MySAwEOzEeyj8q1of7NKLw" base_Element="_MyQyoUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyTO4EOzEeyj8q1of7NKLw" base_Element="_MySAwUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyT18EOzEeyj8q1of7NKLw" base_Element="_MyTO4UOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyUdAkOzEeyj8q1of7NKLw" base_Element="_MyUdAEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyVEEkOzEeyj8q1of7NKLw" base_Element="_MyVEEEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyVrIkOzEeyj8q1of7NKLw" base_Element="_MyVrIEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyXgUEOzEeyj8q1of7NKLw" base_Element="_MyWSMEOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyYucEOzEeyj8q1of7NKLw" base_Element="_MyXgUUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyZVgEOzEeyj8q1of7NKLw" base_Element="_MyYucUOzEeyj8q1of7NKLw"/>
  <UMLLabProfile:Reference xmi:id="_MyZ8kEOzEeyj8q1of7NKLw" base_Element="_MyZVgUOzEeyj8q1of7NKLw"/>
</xmi:XMI>
